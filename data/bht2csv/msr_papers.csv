2012;Dongmei Zhang;MSR 2012 keynote: Software analytics in practice - Approaches and experiences.;1;1;Keynote I;
2012;Rafael Lotufo,Leonardo Teixeira Passos,Krzysztof Czarnecki;Towards improving bug tracking systems with game mechanisms.;2-11;10;Software Repositories;
2012;Georgios Gousios,Diomidis Spinellis;GHTorrent: Github's data from a firehose.;12-21;10;Software Repositories;
2012;Daryl Posnett,Premkumar T. Devanbu,Vladimir Filkov;MIC check: A correlation tactic for ESE data.;22-31;10;Software Repositories;
2012;Iman Keivanloo,Christopher Forbes,Aseel Hmood,Mostafa Erfani,Christopher Neal,George Peristerakis,Juergen Rilling;A Linked Data platform for mining software repositories.;32-35;4;Software Repositories;
2012;Christian Rodriguez-Bustos,Jairo Aponte;How Distributed Version Control Systems impact open source software projects.;36-39;4;Software Repositories;
2012;Jihun Park,Miryung Kim,Baishakhi Ray,Doo-Hwan Bae;An empirical study of supplementary bug fixes.;40-49;10;Bug Fixing and Prediction;
2012;Bunyamin Sisman,Avinash C. Kak;Incorporating version histories in Information Retrieval based bug localization.;50-59;10;Bug Fixing and Prediction;
2012;Nicolas Bettenburg,Meiyappan Nagappan,Ahmed E. Hassan;Think locally, act globally: Improving defect and effort prediction models.;60-69;10;Bug Fixing and Prediction;
2012;Rodrigo Souza,Christina von Flach G. Chavez;Characterizing verification of bug fixes in two open source IDEs.;70-73;4;Bug Fixing and Prediction;
2012;Lucia,Ferdian Thung,David Lo,Lingxiao Jiang;Are faults localizable?;74-77;4;Bug Fixing and Prediction;
2012;Abram Hindle;Green mining: A methodology of relating software change to power consumption.;78-87;10;New MSR Trends;
2012;Pete Rotella,Sunita Chulani;Analysis of customer satisfaction survey data.;88-97;10;New MSR Trends;
2012;Olga Baysal,Reid Holmes,Michael W. Godfrey;Mining usage data and development artifacts.;98-107;10;New MSR Trends;
2012;Mark Harman,Yue Jia,Yuanyuan Zhang;App store mining and analysis: MSR for app stores.;108-111;4;New MSR Trends;
2012;Emad Shihab,Yasutaka Kamei,Pamela Bhattacharya;Mining challenge 2012: The Android platform.;112-115;4;Mining Challenge;
2012;Muhammad Asaduzzaman,Michael C. Bullock,Chanchal Kumar Roy,Kevin A. Schneider;Bug introducing changes: A case study with Android.;116-119;4;Mining Challenge;
2012;Lee Martie,Vijay Krishna Palepu,Hitesh Sajnani,Cristina Videira Lopes;Trendy bugs: Topic trends in the Android bug reports.;120-123;4;Mining Challenge;
2012;Victor Guana,Fabio Rocha,Abram Hindle,Eleni Stroulia;Do the stars align? Multidimensional analysis of Android's layered architecture.;124-127;4;Mining Challenge;
2012;Wei Hu,Dan Han,Abram Hindle,Kenny Wong;The build dependency perspective of Android's concrete architecture.;128-131;4;Mining Challenge;
2012;Vibha Sinha,Senthil Mani,Monika Gupta;MINCE: Mining change history of Android project.;132-135;4;Mining Challenge;
2012;Laura Arjona Reina,Gregorio Robles;Mining for localization in Android.;136-139;4;Mining Challenge;
2012;Margaret-Anne D. Storey;MSR 2012 keynote: The evolution of the social programmer.;140;1;Keynote II;
2012;Cyrille Valentin Artho,Kuniyasu Suzaki,Roberto Di Cosmo,Ralf Treinen,Stefano Zacchiroli;Why do software packages conflict?;141-150;10;Software Analysis;
2012;Anh Cuong Nguyen,Siau-Cheng Khoo;Discovering complete API rules with mutation testing.;151-160;10;Software Analysis;
2012;Jinqiu Yang,Lin Tan;Inferring semantically related words from software context.;161-170;10;Software Analysis;
2012;Caitlin Sadowski,Jaeheon Yi,Sunghun Kim;The evolution of data races.;171-174;4;Software Analysis;
2012;Alexander Breckel;Error mining: Bug detection through comparison with large code databases.;175-178;4;Software Analysis;
2012;Foutse Khomh,Tejinder Dhaliwal,Ying Zou,Bram Adams;Do faster releases improve software quality? An empirical case study of Mozilla Firefox.;179-188;10;Quality and Performance;
2012;Tse-Hsun Chen,Stephen W. Thomas,Meiyappan Nagappan,Ahmed E. Hassan;Explaining software defects using topic models.;189-198;10;Quality and Performance;
2012;Shahed Zaman,Bram Adams,Ahmed E. Hassan;A qualitative study on performance bugs.;199-208;10;Quality and Performance;
2012;Aigerim Issabayeva,Ariadi Nugroho,Joost Visser;Issue handling performance in proprietary software projects.;209-212;4;Quality and Performance;
2012;Maximilian Steff,Barbara Russo;Co-evolution of logical couplings and commits for defect estimation.;213-216;4;Quality and Performance;
2012;Emanuel Giger,Martin Pinzger,Harald Gall;Can we predict types of code changes? An empirical analysis.;217-226;10;Evolution and Process;
2012;Yossi Gil,Maayan Goldstein,Dany Moshkovich;An empirical investigation of changes in some software properties over time.;227-236;10;Evolution and Process;
2012;Christian Bird,Nachiappan Nagappan;Who? Where? What? Examining distributed development in two large open source projects.;237-246;10;Evolution and Process;
2012;Yuan Tian,Palakorn Achananuparp,Nelman Lubis Ibrahim,David Lo,Ee-Peng Lim;What does software engineering community microblog about?;247-250;4;Evolution and Process;
2012;Andrea Capiluppi,Alexander Serebrenik,Ahmmad Youssef;Developing an h-index for OSS developers.;251-254;4;Evolution and Process;
2011;Jim Whitehead;Fantasy, farms, and freemium: what game data mining teaches us about retention, conversion, and virality (keynote abstract).;1;1;Keynotes;
2011;Yuanyuan Zhou;Connecting technology with real-world problems - from copy-paste detection to detecting known bugs: (keynote abstract).;2;1;Keynotes;
2011;Chris Parnin,Christian Bird,Emerson R. Murphy-Hill;Java generics adoption: how new features are introduced, championed, or ignored.;3-12;10;Language evolution;
2011;Siim Karus,Harald Gall;A study of language usage evolution in open source software.;13-22;10;Language evolution;
2011;Oscar Callau,Romain Robbes,Eric Tanter,David Rothlisberger;How developers use the dynamic features of programming languages: the case of smalltalk.;23-32;10;Language evolution;
2011;Laleh Mousavi Eshkevari,Venera Arnaoudova,Massimiliano Di Penta,Rocco Oliveto,Yann-Gael Gueheneuc,Giuliano Antoniol;An exploratory study of identifier renamings.;33-42;10;Language evolution;
2011;Shivani Rao,Avinash C. Kak;Retrieval from software libraries for bug localization: a comparative study of generic and composite text models.;43-52;10;Retrieval, refactoring, clones, readability;
2011;Benjamin Biegel,Quinten David Soetens,Willi Hornig,Stephan Diehl,Serge Demeyer;Comparison of similarity metrics for refactoring detection.;53-62;10;Retrieval, refactoring, clones, readability;
2011;Armijn Hemel,Karl Trygve Kalleberg,Rob Vermaas,Eelco Dolstra;Finding software license violations through binary code clone detection.;63-72;10;Retrieval, refactoring, clones, readability;
2011;Daryl Posnett,Abram Hindle,Premkumar T. Devanbu;A simpler model of software readability.;73-82;10;Retrieval, refactoring, clones, readability;
2011;Emanuel Giger,Martin Pinzger,Harald Gall;Comparing fine-grained source code changes and code churn for bug prediction.;83-92;10;Software quality;
2011;Shahed Zaman,Bram Adams,Ahmed E. Hassan;Security versus performance bugs: a case study on Firefox.;93-102;10;Software quality;
2011;Sandeep Krishnan,Robyn R. Lutz,Katerina Goseva-Popstojanova;Empirical evaluation of reliability improvement in an evolving software product line.;103-112;10;Software quality;
2011;Pete Rotella,Sunita Chulani;Implementing quality metrics and goals at the corporate level.;113-122;10;Software quality;
2011;Dennis Pagano,Walid Maalej;How do developers blog?: an exploratory study.;123-132;10;Developers;
2011;Vibha Sinha,Senthil Mani,Saurabh Sinha;Entering the circle of trust: developer initiation as committers in open-source projects.;133-142;10;Developers;
2011;Gerardo Canfora,Luigi Cerulo,Marta Cimitile,Massimiliano Di Penta;Social interactions around cross-system bug fixings: the case of FreeBSD and OpenBSD.;143-152;10;Developers;
2011;Jon Eyolfson,Lin Tan,Patrick Lam;Do time of day and developer experience affect commit bugginess.;153-162;10;Developers;
2011;Abram Hindle,Neil A. Ernst,Michael W. Godfrey,John Mylopoulos;Automated topic naming to support cross-project analysis of software maintenance activities.;163-172;10;Development support;
2011;Stephen W. Thomas,Bram Adams,Ahmed E. Hassan,Dorothea Blostein;Modeling the evolution of topics in source code histories.;173-182;10;Development support;
2011;Julius Davies,Daniel M. German,Michael W. Godfrey,Abram Hindle;Software bertillonage: finding the provenance of an entity.;183-192;10;Development support;
2011;Alexander W. J. Bradley,Gail C. Murphy;Supporting software history exploration.;193-202;10;Development support;
2011;David Binkley,Matthew Hearn,Dawn Lawrie;Improving identifier informativeness using part of speech information.;203-206;4;Short papers;
2011;Pamela Bhattacharya,Iulian Neamtiu;Bug-fix time prediction models: can we do better?;207-210;4;Short papers;
2011;Yuan-Fang Li,Hongyu Zhang;Integrating software engineering data using semantic web technologies.;211-214;4;Short papers;
2011;Sergey Zeltyn,Perri Tarr,Murray Cantor,Robert Delmonico,Sateesh Kannegala,Mila Keren,Ashok Pon Kumar,Segev Wasserkrug;Improving efficiency in software maintenance.;215-218;4;Short papers;
2011;Caitlin Sadowski,Chris Lewis 0002,Zhongpeng Lin,Xiaoyan Zhu,Jim Whitehead;An empirical analysis of the FixCache algorithm.;219-222;4;Short papers;
2011;Brandon Heller,Eli Marschner,Evan Rosenfeld,Jeffrey Heer;Visualizing collaboration and influence in the open-source software community.;223-226;4;Short papers;
2011;Adrian Schroter;MSR Challenge 2011: Eclipse, Netbeans, Firefox, and Chrome.;227-229;3;Mining challenge;
2011;Xinlei (Oscar) Wang,Eilwoo Baik,Premkumar T. Devanbu;System compatibility analysis of Eclipse and Netbeans based on bug data.;230-233;4;Mining challenge;
2011;Mario Luca Bernardi,Carmine Sementa,Quirino Zagarese,Damiano Distante,Massimiliano Di Penta;What topics do Firefox and Chrome contributors discuss?;234-237;4;Mining challenge;
2011;Olga Baysal,Ian J. Davis,Michael W. Godfrey;A Tale of Two Browsers.;238-241;4;Mining challenge;
2011;Yukinao Hirata,Osamu Mizuno;Do comments explain codes adequately?: investigation by text filtering.;242-245;4;Mining challenge;
2011;Daniel M. German,Julius Davies;Apples vs. oranges?: an exploration of the challenges of comparing the source code of two software systems.;246-249;4;Mining challenge;
2010;James D. Herbsleb;MSR: Mining for scientific results?;;0;Keynotes;
2010;Michele Lanza;The visual terminator.;;0;Keynotes;
2010;Natalia Juristo Juzgado,Sira Vegas;Using differences among replications of software engineering experiments to gain knowledge.;;0;Invited Talk from ESEM 2009;
2010;Ahmed Lamkanfi,Serge Demeyer,Emanuel Giger,Bart Goethals;Predicting the severity of a reported bug.;1-10;10;Bugs, Bugs, Bugs;
2010;Michael Gegick,Pete Rotella,Tao Xie;Identifying security bug reports via text mining: An industrial case study.;11-20;10;Bugs, Bugs, Bugs;
2010;Ariadi Nugroho,Michel R. V. Chaudron,Erik Arisholm;Assessing UML design metrics for predicting fault-prone classes in a Java system.;21-30;10;Bugs, Bugs, Bugs;
2010;Marco D'Ambros,Michele Lanza,Romain Robbes;An extensive comparison of bug prediction approaches.;31-41;11;Bugs, Bugs, Bugs;
2010;Shane McIntosh,Bram Adams,Ahmed E. Hassan;The evolution of ANT build systems.;42-51;10;Evolution & Quality;
2010;Lucas Nussbaum,Stefano Zacchiroli;The Ultimate Debian Database: Consolidating bazaar metadata for Quality Assurance and data mining.;52-61;10;Evolution & Quality;
2010;Adrian Bachmann,Abraham Bernstein;When process data quality affects the number of bugs: Correlations in software engineering datasets.;62-71;10;Evolution & Quality;
2010;Foyzur Rahman,Christian Bird,Premkumar T. Devanbu;Clones: What is that smell?;72-81;10;Evolution & Quality;
2010;Abram Hindle,Israel Herraiz,Emad Shihab,Zhen Ming Jiang;Mining Challenge 2010: FreeBSD, GNOME Desktop and Debian/Ubuntu.;82-85;4;Mining Challenge;
2010;Julius Davies,Hanyu Zhang,Lucas Nussbaum,Daniel M. German;Perspectives on bugs in the Debian bug tracking system.;86-89;4;Mining Challenge;
2010;Andreas Mauczka,Christian Schanes,Florian Fankhauser,Mario Bernhart,Thomas Grechenig;Mining security changes in FreeBSD.;90-93;4;Mining Challenge;
2010;Bart Luijten,Joost Visser,Andy Zaidman;Assessment of issue handling efficiency.;94-97;4;Mining Challenge;
2010;Jens Krinke,Nicolas Gold,Yue Jia,David Binkley;Cloning and copying between GNOME projects.;98-101;4;Mining Challenge;
2010;Yusuke Sasaki,Tetsuo Yamamoto,Yasuhiro Hayase,Katsuro Inoue;Finding file clones in FreeBSD Ports Collection.;102-105;4;Mining Challenge;
2010;Gargi Bougie,Christoph Treude,Daniel M. German,Margaret-Anne D. Storey;A comparative exploration of FreeBSD bug lifetimes.;106-109;4;Mining Challenge;
2010;Antonio Vetro,Marco Torchiano,Maurizio Morisio;Assessing the precision of FindBugs by mining Java projects developed at a university.;110-113;4;Short Papers;
2010;Meiyappan Nagappan,Mladen A. Vouk;Abstracting log lines to log event types for mining software system logs.;114-117;4;Short Papers;
2010;Adrian Schroter,Nicolas Bettenburg,Rahul Premraj;Do stack traces help developers fix bugs?;118-121;4;Short Papers;
2010;Daryl Posnett,Christian Bird,Premkumar T. Devanbu;THEX: Mining metapatterns from java.;122-125;4;Short Papers;
2010;Methanias Colaco Jr.,Manoel Gomes de Mendonca Neto,Mario Farias,Paulo Henrique;OSS developers context-specific Preferred Representational systems: A initial Neurolinguistic text analysis of the Apache mailing list.;126-129;4;Short Papers;
2010;Joel Ossher,Sushil Krishna Bajracharya,Cristina Videira Lopes;Automated dependency resolution for open source software.;130-140;11;Search & Recommendation;
2010;Marcel Bruch,Mira Mezini,Martin Monperrus;Mining subclassing directives to improve framework reuse.;141-150;10;Search & Recommendation;
2010;Massimiliano Di Penta,Daniel M. German,Giuliano Antoniol;Identifying licensing of jar archives using a code-search approach.;151-160;10;Search & Recommendation;
2010;Romain Robbes,Damien Pollet,Michele Lanza;Replaying IDE interactions to evaluate and improve change prediction approaches.;161-170;10;Search & Recommendation;
2010;Gregorio Robles;Replicating MSR: A study of the potential replicability of papers published in the Mining Software Repositories proceedings.;171-180;10;Replication;
2010;Walid M. Ibrahim,Nicolas Bettenburg,Emad Shihab,Bram Adams,Ahmed E. Hassan;Should I contribute to this discussion?;181-190;10;People & Collaboration;
2010;Walid Maalej,Hans-Jorg Happel;Can development work describe itself?;191-200;10;People & Collaboration;
2010;Roozbeh Nia,Christian Bird,Premkumar T. Devanbu,Vladimir Filkov;Validity of network analyses in Open Source Projects.;201-209;9;People & Collaboration;
2009;Michael McAllister;Success factors of Business Intelligence.;;0;Keynotes;
2009;Thomas Ball;A brief history of software - from Bell Labs to Microsoft Research.;;0;Keynotes;
2009;Christian Bird,Peter C. Rigby,Earl T. Barr,David J. Hamilton,Daniel M. German,Premkumar T. Devanbu;The promises and perils of mining git.;1-10;10;Version Control and Infrastructure;
2009;Audris Mockus;Amassing and indexing a large sample of version control systems: Towards the census of public source code history.;11-20;10;Version Control and Infrastructure;
2009;Weiyi Shang,Zhen Ming Jiang,Bram Adams,Ahmed E. Hassan;MapReduce as a general framework to support research in Mining Software Repositories (MSR).;21-30;10;Version Control and Infrastructure;
2009;Georgios Gousios,Diomidis Spinellis;A platform for software engineering research.;31-40;10;Version Control and Infrastructure;
2009;Cathal Boogerd,Leon Moonen;Evaluating the relation between coding standard violations and faultswithin and across software versions.;41-50;10;Defect Prediction;
2009;Jayalath Ekanayake,Jonas Tappolet,Harald Gall,Abraham Bernstein;Tracking concept drift of software projects using defect prediction quality.;51-60;10;Defect Prediction;
2009;Yonghee Shin,Robert M. Bell,Thomas J. Ostrand,Elaine J. Weyuker;Does calling structure information improve the accuracy of fault prediction?;61-70;10;Defect Prediction;
2009;Eric Enslen,Emily Hill,Lori L. Pollock,K. Vijay-Shanker;Mining source code to automatically split identifiers for software analysis.;71-80;10;Text Analysis;
2009;Daniel M. German,Massimiliano Di Penta,Yann-Gael Gueheneuc,Giuliano Antoniol;Code siblings: Technical and legal implications of copying code between applications.;81-90;10;Text Analysis;
2009;Jason R. Casebolt,Jonathan L. Krein,Alexander C. MacLean,Charles D. Knutson,Daniel P. Delorey;Author entropy vs. file size in the gnome suite of applications.;91-94;4;MSR Chellenge;
2009;Holger Schackmann,Horst Lichter;Evaluating process quality in GNOME based on change request data.;95-98;4;MSR Chellenge;
2009;Erik Linstead,Pierre Baldi;Mining the coherence of GNOME bug reports with statistical topic models.;99-102;4;MSR Chellenge;
2009;Mircea Lungu,Jacopo Malnati,Michele Lanza;Visualizing Gnome with the Small Project Observatory.;103-106;4;MSR Chellenge;
2009;Emad Shihab,Zhen Ming Jiang,Ahmed E. Hassan;On the use of Internet Relay Chat (IRC) meetings by developers of the GNOME GTK+ project.;107-110;4;MSR Chellenge;
2009;Sushil Krishna Bajracharya,Cristina Videira Lopes;Mining search topics from a code search engine usage log.;111-120;10;Topic Mining;
2009;Walid Maalej,Hans-Jorg Happel;From work to word: How do software developers describe their work?;121-130;10;Developers;
2009;Dominique Matter,Adrian Kuhn,Oscar Nierstrasz;Assigning bug reports using a vocabulary-based expertise model of developers.;131-140;10;Developers;
2009;Lile Hattori,Michele Lanza;Mining the history of synchronous changes to refine code ownership.;141-150;10;Developers;
2009;Zeeger Lubsen,Andy Zaidman,Martin Pinzger;Using association rules to study the co-evolution of production & test code.;151-154;4;Poster Papers;
2009;Sarah Rastkar,Gail C. Murphy;On what basis to recommend: Changesets or interactions?;155-158;4;Poster Papers;
2009;Kim Sebastian Herzig,Andreas Zeller;Mining the Jazz repository: Challenges and opportunities.;159-162;4;Poster Papers;
2009;Kai Tian,Meghan Revelle,Denys Poshyvanyk;Using Latent Dirichlet Allocation for automatic categorization of software.;163-166;4;Poster Papers;
2009;Gregorio Robles,Jesus M. Gonzalez-Barahona,Israel Herraiz;Evolution of the core team of developers in libre software projects.;167-170;4;Poster Papers;
2009;Prasanth Anbalagan,Mladen A. Vouk;On mining data across software repositories.;171-174;4;Poster Papers;
2009;Adrian Kuhn;Automatic labeling of software components and their evolution using log-likelihood ratio of word frequencies in source code.;175-178;4;Poster Papers;
2009;Nathaniel Ayewah,William Pugh;Learning from defect removals.;179-182;4;Poster Papers;
2009;Joel Ossher,Sushil Krishna Bajracharya,Erik Linstead,Pierre Baldi,Cristina Videira Lopes;SourcererDB: An aggregated repository of statically analyzed and cross-linked open source Java projects.;183-186;4;Poster Papers;
2009;Pierre van de Laar;On the transfer of evolutionary couplings to industry.;187-190;4;Poster Papers;
2008;Israel Herraiz,Jesus M. Gonzalez-Barahona,Gregorio Robles;Determinism and evolution.;1-10;10;Mining 1;
2008;Kentaro Yoshimura,Fumio Narisawa,Koji Hashimoto,Tohru Kikuno;FAVE: factor analysis based approach for detecting product line variability from change history.;11-18;8;Mining 1;
2008;Chadd C. Williams,Jaime Spacco;Branching and merging in the repository.;19-22;4;Mining 1;
2008;Reid Holmes,Andrew Begel;Deep intellisense: a tool for rehydrating evaporated information.;23-26;4;Mining 1;
2008;Nicolas Bettenburg,Rahul Premraj,Thomas Zimmermann,Sunghun Kim;Extracting structural information from bug reports.;27-30;4;Bugs and changes;
2008;Takayuki Omori,Katsuhisa Maruyama;A change-aware development environment by recording editing operations of source code.;31-34;4;Bugs and changes;
2008;Jacek Ratzinger,Thomas Sigmund,Harald Gall;On the relation of refactorings and software defect prediction.;35-38;4;Bugs and changes;
2008;Sangeetha Sudhakrishnan,Janaki T. Madhavan,Jim Whitehead,Jose Renau;Understanding bug fix patterns in verilog.;39-42;4;Understanding and infrastructure;
2008;Lucas Layman,Nachiappan Nagappan,Sam Guckenheimer,Jeff Beehler,Andrew Begel;Mining software effort data: preliminary analysis of visual studio team system data.;43-46;4;Understanding and infrastructure;
2008;Robert Gobeille;The FOSSology project.;47-50;4;Understanding and infrastructure;
2008;Chris Parnin,Carsten Gorg;Improving change descriptions with change contexts.;51-60;10;Changes and clones;
2008;Hung-Fu Chang,Audris Mockus;Evaluation of source code copy detection methods on freebsd.;61-66;6;Changes and clones;
2008;Peter Weissgerber,Daniel Neu,Stephan Diehl;Small patches get in!;67-76;10;Changes and clones;
2008;Abraham Bernstein;How to learn enough data mining to be dangerous in 60 minutes.;77-78;2;How to learn enough data mining to be dangerous in 60 minutes;
2008;Emily Hill,Zachary P. Fry,Haley Boyd,Giriprasad Sridhara,Yana Novikova,Lori L. Pollock,K. Vijay-Shanker;AMAP: automatically mining abbreviation expansions in programs to enhance software maintenance tools.;79-88;10;Mining 2;
2008;Hideaki Hata,Osamu Mizuno,Tohru Kikuno;An extension of fault-prone filtering using precise training and a dynamic threshold.;89-98;10;Mining 2;
2008;Abram Hindle,Daniel M. German,Richard C. Holt;What do large commits tell us?: a taxonomical study of large commits.;99-108;10;Mining 2;
2008;Suresh Thummalapenta,Tao Xie;SpotWeb: detecting framework hotspots via mining open source repositories on the web.;109-112;4;Mining 3;
2008;David S. Pattison,Christian Bird,Premkumar T. Devanbu;Talk and work: a preliminary report.;113-116;4;Mining 3;
2008;Christopher Thomson,Mike Holcombe;Correctness of data mined from CVS.;117-120;4;Mining 3;
2008;David Schuler,Thomas Zimmermann;Mining usage expertise from version archives.;121-124;4;People are people, so ...;
2008;Omar Alonso,Premkumar T. Devanbu,Michael Gertz;Expertise identification and visualization from CVS.;125-128;4;People are people, so ...;
2008;Georgios Gousios,Eirini Kalliamvakou,Diomidis Spinellis;Measuring developer contribution from software repository data.;129-132;4;People are people, so ...;
2008;Michel Wermelinger,Yijun Yu;Analyzing the evolution of eclipse plugins.;133-136;4;Mining challenge results;
2008;Harvey P. Siy,Parvathi Chundi,Mahadevan Subramaniam;Summarizing developer work history using time series segmentation: challenge report.;137-140;4;Mining challenge results;
2008;Hongyu Zhang;An initial study of the growth of eclipse defects.;141-144;4;Mining challenge results;
2008;Israel Herraiz,Daniel M. German,Jesus M. Gonzalez-Barahona,Gregorio Robles;Towards a simplification of the bug report form in eclipse.;145-148;4;Mining challenge results;
2008;Reid Holmes,Robert J. Walker;A newbie's guide to eclipse APIs.;149-152;4;Mining challenge results;
2007;Cathrin Weiss,Rahul Premraj,Thomas Zimmermann,Andreas Zeller;How Long Will It Take to Fix This Bug?;1;1;Bugs;
2007;John Anvik,Gail C. Murphy;Determining Implementation Expertise from Bug Reports.;2;1;Bugs;
2007;Shuuji Morisaki,Akito Monden,Tomoko Matsumura,Haruaki Tamada,Ken-ichi Matsumoto;Defect Data Analysis Based on Extended Association Rule Mining.;3;1;Bugs;
2007;Osamu Mizuno,Shiro Ikami,Shuya Nakaichi,Tohru Kikuno;Spam Filter Based Approach for Finding Fault-Prone Software Modules.;4;1;Bugs;
2007;Shawn Minto,Gail C. Murphy;Recommending Emergent Teams.;5;1;Teams;
2007;Christian Bird,Alex Gourley,Premkumar T. Devanbu,Anand Swaminathan,Greta Hsu;Open Borders? Immigration in Open Source Projects.;6;1;Teams;
2007;Olga Baysal,Andrew J. Malton;Correlating Social Interactions to Release History during Software Evolution.;7;1;Teams;
2007;Liguo Yu,Srini Ramaswamy;Mining CVS Repositories to Understand Open-Source Project Developer Roles.;8;1;Teams;
2007;Peter Weissgerber,Mathias Pohl,Michael Burch;Visual Data Mining in Software Archives to Detect How Developers Work Together.;9;1;Mining;
2007;Christoph Kiefer,Abraham Bernstein,Jonas Tappolet;Mining Software Repositories with iSPAROL and a Software Evolution Ontology.;10;1;Mining;
2007;Thomas Zimmermann;Mining Workspace Updates in CVS.;11;1;Mining;
2007;Mark Grechanik,Kevin M. Conroy,Katharina Probst;Finding Relevant Applications for Prototyping.;12;1;Mining;
2007;Stephen P. Masticola;Lightweight Risk Mitigation for Software Development Projects Using Repository Mining.;13;1;Mining;
2007;Gerardo Canfora,Luigi Cerulo,Massimiliano Di Penta;Identifying Changed Source Code Lines from Version Repositories.;14;1;Changes;
2007;Romain Robbes;Mining a Change-Based Software Repository.;15;1;Changes;
2007;Filip Van Rysselberghe,Serge Demeyer;Studying Versioning Information to Understand Inheritance Hierarchy Changes.;16;1;Changes;
2007;Huzefa H. Kagdi,Jonathan I. Maletic;Combining Single-Version and Evolutionary Dependencies for Software-Change Prediction.;17;1;Changes;
2007;Angela Lozano,Michel Wermelinger,Bashar Nuseibeh;Evaluating the Harmfulness of Cloning: A Change Based Experiment.;18;1;Changes;
2007;Abram Hindle,Michael W. Godfrey,Richard C. Holt;Release Pattern Discovery via Partitioning: Methodology and Case Study.;19;1;Patterns and Models;
2007;Huzefa H. Kagdi,Michael L. Collard,Jonathan I. Maletic;Comparing Approaches to Mining Source Code for Call-Usage Patterns.;20;1;Patterns and Models;
2007;Israel Herraiz,Jesus M. Gonzalez-Barahona,Gregorio Robles;Towards a Theoretical Model for Software Growth.;21;1;Patterns and Models;
2007;Simone Livieri,Yoshiki Higo,Makoto Matsushita,Katsuro Inoue;Analysis of the Linux Kernel Evolution Using Code Clone Coverage.;22;1;Patterns and Models;
2007;Peter C. Rigby,Ahmed E. Hassan;What Can OSS Mailing Lists Tell Us? A Preliminary Psychometric Text Analysis of the Apache Developer Mailing List.;23;1;Developers, Developers, Developers;
2007;Daniel M. German;Using Software Distributions to Understand the Relationship among Free and Open Source Software Projects.;24;1;Developers, Developers, Developers;
2007;Giuseppe Valetto,Mary E. Helander,Kate Ehrlich,Sunita Chulani,Mark N. Wegman,Clay Williams;Using Software Repositories to Investigate Socio-technical Congruence in Development Projects.;25;1;Developers, Developers, Developers;
2007;Christian Bird,Alex Gourley,Premkumar T. Devanbu;Detecting Patch Submission and Acceptance in OSS Projects.;26;1;Developers, Developers, Developers;
2007;Sunghun Kim,Michael D. Ernst;Prioritizing Warning Categories by Analyzing Software History.;27;1;Developers, Developers, Developers;
2007;Jesus M. Gonzalez-Barahona,Gregorio Robles,Israel Herraiz;Impact of the Creation of the Mozilla Foundation in the Activity of Developers.;28;1;Mining Challenge;
2007;Lucas D. Panjer;Predicting Eclipse Bug Lifetimes.;29;1;Mining Challenge;
2007;Erik Linstead,Paul Rigor,Sushil Krishna Bajracharya,Cristina Videira Lopes,Pierre Baldi;Mining Eclipse Developer Contributions via Author-Topic Models.;30;1;Mining Challenge;
2007;Adrian Schroter;Predicting Defects and Changes with Import Relations.;31;1;Mining Challenge;
2007;Israel Herraiz,Jesus M. Gonzalez-Barahona,Gregorio Robles;Forecasting the Number of Changes in Eclipse Using Time Series Analysis.;32;1;Mining Challenge;
2007;Hemant Joshi,Chuanlei Zhang,Srini Ramaswamy,Coskun Bayrak;Local and Global Recency Weighting Approach to Bug Prediction.;33;1;Mining Challenge;
2006;Stephan Diehl,Harald Gall,Martin Pinzger,Ahmed E. Hassan;Introduction to MSR 2006.;1-2;2;;
2006;Gregorio Robles,Jesus M. Gonzalez-Barahona,Martin Michlmayr,Juan Jose Amor;Mining large software compilations over time: another perspective of software evolution.;3-9;7;Repositories;
2006;Yaojin Yang,Claudio Riva;Scenarios for mining the software architecture evolution.;10-13;4;Repositories;
2006;Masateru Tsunoda,Akito Monden,Hiroshi Yadohisa,Nahomi Kikuchi,Ken-ichi Matsumoto;Productivity analysis of Japanese enterprise software development projects.;14-17;4;Repositories;
2006;Gui Gui,Paul D. Scott;Coupling and cohesion measures for evaluation of component reusability.;18-21;4;Repositories;
2006;Sunghun Kim,Thomas Zimmermann,Miryung Kim,Ahmed E. Hassan,Audris Mockus,Tudor Girba,Martin Pinzger,Jim Whitehead,Andreas Zeller;TA-RE: an exchange language for mining software repositories.;22-25;4;Repositories;
2006;Marco D'Ambros,Michele Lanza,Mircea Lungu;The evolution radar: visualizing integrated logical coupling information.;26-32;7;Visualization;
2006;Lucian Voinea,Alexandru Telea;An open framework for CVS repository querying, analysis and visualization.;33-39;7;Visualization;
2006;Sunghun Kim,Kai Pan,Jim Whitehead;Micro pattern evolution.;40-46;7;Patterns;
2006;Huzefa H. Kagdi,Shehnaaz Yusuf,Jonathan I. Maletic;Mining sequences of changed-files from version histories.;47-53;7;Patterns;
2006;Tao Xie,Jian Pei;MAPO: mining API usages from open source repositories.;54-57;4;Patterns;
2006;Miryung Kim,David Notkin;Program element matching for multi-version program analyses.;58-64;7;Matching;
2006;Tobias Sager,Abraham Bernstein,Martin Pinzger,Christoph Kiefer;Detecting similar Java classes using tree algorithms.;65-71;7;Matching;
2006;Thomas Zimmermann,Sunghun Kim,Andreas Zeller,Jim Whitehead;Mining version archives for co-changed lines.;72-75;4;Matching;
2006;Hung-Fu Chang,Audris Mockus;Constructing universal version history.;76-79;4;Matching;
2006;Imed Hammouda,Kai Koskimies;Concern based mining of heterogeneous software repositories.;80-86;7;Concerns;
2006;Benjamin Sigonneau,Olivier Ridoux;Software engineering applications of logic file system: application to automated multi-criteria indexation of software components.;87-93;7;Concerns;
2006;Silvia Breu,Thomas Zimmermann,Christian Lindig;Mining eclipse for cross-cutting concerns.;94-97;4;Concerns;
2006;Robert J. Walker,Reid Holmes,Ian Hedgeland,Puneet Kapur,Andrew Smith;A lightweight approach to technical risk estimation via probabilistic impact analysis.;98-104;7;Impact analysis;
2006;Gerardo Canfora,Luigi Cerulo;Fine grained indexing of software repositories to support impact analysis.;105-111;7;Impact analysis;
2006;Peter Weissgerber,Stephan Diehl;Are refactorings less error-prone than other changes?;112-118;7;Defects;
2006;Patrick Knab,Martin Pinzger,Abraham Bernstein;Predicting defect densities in source code files with decision tree learners.;119-125;7;Defects;
2006;Mina Askari,Richard C. Holt;Information theoretic evaluation of change prediction models for large-scale software.;126-132;7;Defects;
2006;Jaime Spacco,David Hovemeyer,William Pugh;Tracking defect warnings across versions.;133-136;4;Defects;
2006;Christian Bird,Alex Gourley,Premkumar T. Devanbu,Michael Gertz,Anand Swaminathan;Mining email social networks.;137-143;7;Beyond source code;
2006;Gregorio Robles,Jesus M. Gonzalez-Barahona;Geographic location of developers at SourceForge.;144-150;7;Beyond source code;
2006;Gina Venolia;Textual alusions to artifacts in software-related repositories.;151-154;4;Beyond source code;
2006;Chris Parnin,Carsten Gorg,Spencer Rugaber;Enriching revision history with interactions.;155-158;4;Beyond source code;
2006;Daniel M. German,Peter C. Rigby,Margaret-Anne D. Storey;Using evolutionary annotations from change logs to enhance program comprehension.;159-162;4;Beyond source code;
2006;Daniel M. German;A study of the contributors of PostgreSQL.;163-164;2;MSR-challenge report;
2006;Dirk Beyer;Co-change visualization applied to PostgreSQL and ArgoUML: (MSR challenge report).;165-166;2;MSR-challenge report;
2006;Lucian Voinea,Alexandru Telea;Mining software repositories with CVSgrab.;167-168;2;MSR-challenge report;
2006;Thomas Zimmermann,Silvia Breu,Christian Lindig,V. Benjamin Livshits;Mining additions of method calls in ArgoUML.;169-170;2;MSR-challenge report;
2006;Takeshi Kakimoto,Akito Monden,Yasutaka Kamei,Haruaki Tamada,Masateru Tsunoda,Ken-ichi Matsumoto;Using software birthmarks to identify similar classes and major functionalities.;171-172;2;MSR-challenge report;
2006;Sunghun Kim,Jim Whitehead;How long did it take to fix bugs?;173-174;2;MSR-challenge report;
2006;Peter Weissgerber,Stephan Diehl,Carsten Gorg;Mining refactorings in ARGOUML.;175-176;2;MSR-challenge report;
2006;Marco D'Ambros,Michele Lanza;Applying the evolution radar to PostgreSQL.;177-178;2;MSR-challenge report;
2006;Zhen Ming Jiang,Ahmed E. Hassan;Examining the evolution of code comments in PostgreSQL.;179-180;2;MSR-challenge report;
2006;Masateru Tsunoda,Akito Monden,Takeshi Kakimoto,Yasutaka Kamei,Ken-ichi Matsumoto;Analyzing OSS developers' working time using mailing lists archives.;181-182;2;MSR-challenge report;
2006;Gerardo Canfora,Luigi Cerulo;Where is bug resolution knowledge stored?;183-184;2;MSR-challenge report;
2006;Christian Bird,Alex Gourley,Premkumar T. Devanbu,Michael Gertz,Anand Swaminathan;Mining email social networks in Postgres.;185-186;2;MSR-challenge report;
2005;Iulian Neamtiu,Jeffrey S. Foster,Michael W. Hicks;Understanding source code evolution using abstract syntax tree matching.;;0;Understanding Evolution and Change Patterns;
2005;Chadd C. Williams,Jeffrey K. Hollingsworth;Recovering system specific rules from software repositories.;;0;Understanding Evolution and Change Patterns;
2005;Michael Fischer,Johann Oberleitner,Jacek Ratzinger,Harald Gall;Mining evolution data of a product family.;;0;Understanding Evolution and Change Patterns;
2005;Miryung Kim,David Notkin;Using a clone genealogy extractor for understanding and supporting evolution of code clones.;;0;Understanding Evolution and Change Patterns;
2005;Jacek Sliwerski,Thomas Zimmermann,Andreas Zeller;When do changes induce fixes?;;0;Defect Analysis;
2005;Carsten Gorg,Peter Weissgerber;Error detection by refactoring reconstruction.;;0;Defect Analysis;
2005;Jaime Spacco,Jaymie Strecker,David Hovemeyer,William Pugh;Software repository mining with Marmoset: an automated programming project snapshot and testing system.;;0;Education;
2005;Keir Mierle,Kevin Laven,Sam T. Roweis,Greg Wilson;Mining student CVS repositories for performance indicators.;;0;Education;
2005;Masaru Ohba,Katsuhiko Gondow;"Toward mining ""concept keywords"" from identifiers in large software projects.";;0;Text Mining;
2005;Annie T. T. Ying,James L. Wright,Steven Abrams;Source code that talks: an exploration of Eclipse task comments and their implication to repository mining.;;0;Text Mining;
2005;Jane Huffman Hayes,Alexander Dekhtyar,Senthil Karthikeyan Sundaram;Text mining for software engineering: how analyst feedback impacts final results.;;0;Text Mining;
2005;Sunghun Kim,Jim Whitehead,Jennifer Bevan;Analysis of signature change patterns.;;0;Software Changes and Evolution;
2005;Jacek Ratzinger,Michael Fischer,Harald Gall;Improving evolvability through refactoring.;;0;Software Changes and Evolution;
2005;Giuliano Antoniol,Vincenzo Fabio Rollo,Gabriele Venturi;Linear predictive coding and cepstrum coefficients for mining time variant information from software repositories.;;0;Software Changes and Evolution;
2005;Michael VanHilst,Pankaj K. Garg,Christopher Lo;Repository mining and Six Sigma for process improvement.;1-4;4;Process and Collaboration;
2005;Shih-Kun Huang,Kang-min Liu;Mining version histories to verify the learning process of Legitimate Peripheral Participants.;;0;Process and Collaboration;
2005;Huzefa H. Kagdi,Michael L. Collard,Jonathan I. Maletic;Towards a taxonomy of approaches for mining of source code repositories.;;0;Taxonomies & Formal Representations;
2005;Daniel M. German,Davor Cubranic,Margaret-Anne D. Storey;A framework for describing and understanding mining tools in software development.;;0;Taxonomies & Formal Representations;
2005;Abram Hindle,Daniel M. German;SCQL: a formal model and a query language for source control repositories.;;0;Taxonomies & Formal Representations;
2005;Gregorio Robles,Jesus M. Gonzalez-Barahona;Developer identification methods for integrated data from various sources.;;0;Integration and Collaboration;
2005;Masao Ohira,Naoki Ohsugi,Tetsuya Ohoka,Ken-ichi Matsumoto;Accelerating cross-project knowledge collaboration using collaborative filtering and social networks.;;0;Integration and Collaboration;
2005;Megan Conklin,James Howison,Kevin Crowston;Collaboration using OSSmole: a repository of FLOSS data and analyses.;;0;Integration and Collaboration;
