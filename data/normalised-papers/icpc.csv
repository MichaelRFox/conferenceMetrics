2012;Mircea Lungu,Oscar Nierstrasz;Agile software assessment (Invited paper).;3-10;8;Invited Papers;;
2012;Robert DeLine;Studying developers for fun and profit: (Keynote abstract).;11;1;Invited Papers;;
2012;Norman Wilde,Vaclav Rajlich;A retrospective view on: The role of concepts in program comprehension: (MIP award).;12-13;2;Invited Papers;;
2012;Rainer Koschke,Bernhard Katzmarski;Program complexity metrics and programmer opinions.;17-26;10;Main Research Track;Cognitive Processes;selected
2012;Zohreh Sharafi,Zephyrin Soh,Yann-Gael Gueheneuc,Giuliano Antoniol;Women and men - Different but equal: On the impact of identifier style on source code reading.;27-36;10;Main Research Track;Cognitive Processes;selected
2012;Takashi Ishio,Shogo Etsuda,Katsuro Inoue;A lightweight visualization of interprocedural data-flow paths for source code reading.;37-46;10;Main Research Track;Cognitive Processes;selected
2012;Don S. Batory,Janet Feigenspan,Taylor L. Riche;Is the derivation of a model easier to understand than the model itself?;47-52;6;Main Research Track;Cognitive Processes;selected
2012;Chandan Raj Rupakheti,Daqing Hou;Evaluating forum discussions to inform the design of an API critic.;53-62;10;The Role of the Developer;;selected
2012;Gerardo Canfora,Jairo Aponte,Sebastiano Panichella,Andrian Marcus,Massimiliano Di Penta;Mining source code descriptions from developer communications.;63-72;10;The Role of the Developer;;selected
2012;Janet Feigenspan,Sven Apel,Christian Kastner,Stefan Hanenberg,Jorg Liebig;Measuring programming experience.;73-82;10;The Role of the Developer;;selected
2012;Dror G. Feitelson,Adam Matan,Ahmad Jbara;High-MCC functions in the Linux kernel.;83-92;10;Measurement;;selected
2012;Gregor Kiczales,John-Jose Nunez;Understanding registration-based abstractions: A quantitative user study.;93-102;10;Measurement;;selected
2012;Claudio Sant'Anna,Bruno Carreiro da Silva,Christina von Flach G. Chavez,Alessandro Garcia;Concern-based cohesion: Unveiling a hidden dimension of cohesion measurement.;103-112;10;Measurement;;selected
2012;Meiyappan Nagappan,Ahmed E. Hassan,Israel J. Mojica Ruiz,Bram Adams;Understanding reuse in the Android Market.;113-122;10;Measurement;;selected
2012;Chris Parnin,Spencer Rugaber;Programmer information needs after memory failure.;123-132;10;Understanding and Architecture;;selected
2012;Abdelwahab Hamou-Lhadj,Luay Alawneh;Identifying computational phases from inter-process communication traces of HPC applications.;133-142;10;Understanding and Architecture;;selected
2012;Leon Moonen,Amir Reza Yazdanshenas;Tracking and visualizing information flow in component-based systems.;143-152;10;Understanding and Architecture;;selected
2012;Romain Robbes,Stefan Hanenberg,Sebastian Kleinschmager,Andreas Stefik,Eric Tanter;Do static type systems improve the maintainability of software systems? An empirical study.;153-162;10;Empirical Studies;;selected
2012;Giuliano Antoniol,Bertrand Van den Plas,Yann-Gael Gueheneuc,Zohreh Sharafi,Zephyrin Soh,Gerardo Cepeda Porras;Professional status and expertise for UML class diagram comprehension: An empirical study.;163-172;10;Empirical Studies;;selected
2012;Christopher S. Corley,Nicholas A. Kraft,Elizabeth A. Kammer;Modeling the ownership of source code topics.;173-182;10;Semantics and Traceability;;selected
2012;Anas Mahmoud,Nan Niu,Songhua Xu;A semantic relatedness approach for traceability link recovery.;183-192;10;Semantics and Traceability;;selected
2012;Annibale Panichella,Massimiliano Di Penta,Andrea De Lucia,Rocco Oliveto,Sebastiano Panichella;Using IR methods for labeling source code artifacts: Is it worthwhile?;193-202;10;Semantics and Traceability;;selected
2012;Bogdan Dit,Evan Moritz,Denys Poshyvanyk;A TraceLab-based solution for creating, conducting, and sharing feature location experiments.;203-208;6;Semantics and Traceability;;selected
2012;Sebastian Eder,Rudolf Vaas,Elmar Jurgens,Maximilian Junker,Benedikt Hauptmann;Can clone detection support test comprehension?;209-218;10;Source-Code Analysis;;selected
2012;Jan Harder,Rebecca Tiarks;A controlled experiment on software clones.;219-228;10;Source-Code Analysis;;selected
2012;Andy Kellens,Carlos Noguera,Coen De Roover,Viviane Jonckers;Code querying by UML.;229-238;10;Source-Code Analysis;;selected
2012;Chandan Raj Rupakheti,Daqing Hou;CriticAL: A critic for APIs and libraries.;241-243;3;Tool Demonstrations;;
2012;Janet Feigenspan,Norbert Siegmund;Supporting comprehension experiments with human subjects.;244-246;3;Tool Demonstrations;;
2012;Chanchal Kumar Roy,Iman Keivanloo,Juergen Rilling;SeByte: A semantic clone detection tool for intermediate languages.;247-249;3;Tool Demonstrations;;
2012;Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;CRat: A refactoring support tool for Form Template Method.;250-252;3;Tool Demonstrations;;
2012;Hiroshi Kazato,Satoshi Okada,Shinpei Hayashi,Motoshi Saeki,Takashi Hoshino,Shunsuke Miyata;Toward structured location of features.;255-256;2;Poster Presentations;;
2012;Bo Zhang;Extraction and improvement of conditionally compiled product line code.;257-258;2;Poster Presentations;;
2012;Slawomir Duszynski,Vasil L. Tenev;Applying bioinformatics in the analysis of software variants.;259-260;2;Poster Presentations;;
2012;Joel Ossher,Hitesh Sajnani,Cristina Videira Lopes;Parallel code clone detection using MapReduce.;261-262;2;Poster Presentations;;
2012;Hitesh Sajnani;Automatic software architecture recovery: A machine learning approach.;265-268;4;Student Research Symposium;;
2012;Anas Mahmoud;Toward an effective automated tracing process.;269-272;4;Student Research Symposium;;
2012;Ahmad Jbara;Characterization of the Linux configuration system.;273-276;4;Student Research Symposium;;
2012;Iman Keivanloo;Leveraging clone detection for Internet-scale source code search.;277-280;4;Student Research Symposium;;
2011;Leon Moonen;Keynotes.;;0;;;
2011;Margaret-Anne D. Storey;Invited Talk.;;0;;;
2011;Andrian Marcus,Giuseppe Scanniello;Clustering Support for Static Concept Location in Source Code.;1-10;10;Concept and Feature Location;;selected
2011;Bogdan Dit,Giuliano Antoniol,Denys Poshyvanyk,Latifa Guerrouj;Can Better Identifier Splitting Techniques Help Feature Location?;11-20;10;Concept and Feature Location;;selected
2011;Annibale Panichella,Massimiliano Di Penta,Andrea De Lucia,Rocco Oliveto,Sebastiano Panichella;Improving IR-based Traceability Recovery Using Smoothing Filters.;21-30;10;Concept and Feature Location;;selected
2011;Annie T. T. Ying,Martin P. Robillard;The Influence of the Task on Programmer Behaviour.;31-40;10;Empirical Studies of Programmers;;selected
2011;Jan Karstens,Alexander Zeier,Oleksandr Panchenko,Hasso Plattner;Precise and Scalable Querying of Syntactical Source Code Patterns Using Sample Code Snippets and a Database.;41-50;10;Empirical Studies of Programmers;;selected
2011;Stefan Endrikat,Stefan Hanenberg;Is Aspect-Oriented Programming a Rewarding Investment into Future Code Changes? A Socio-technical Study on Development and Maintenance Time.;51-60;10;Empirical Studies of Programmers;;selected
2011;Stephane Ducasse,David Rothlisberger,Oscar Nierstrasz;SmartGroups: Focusing on Task-Relevant Source Artifacts in IDEs.;61-70;10;Automated Support for Program Comprehension;;selected
2011;Lori L. Pollock,K. Vijay-Shanker,Giriprasad Sridhara;Generating Parameter Comments and Integrating with Method Summaries.;71-80;10;Automated Support for Program Comprehension;;selected
2011;Ali Ouni,Mounir Boukadoum,Houari A. Sahraoui,Marouane Kessentini,Wael Kessentini;Design Defects Detection and Correction by Example.;81-90;10;Automated Support for Program Comprehension;;selected
2011;Lin Li,Daqing Hou;Obstacles in Using Frameworks and APIs: An Exploratory Study of Programmers' Newsgroup Discussions.;91-100;10;Collaborative Program Comprehension;;selected
2011;Michele Lanza,Lile Hattori,Arie van Deursen,Anja Guzzi,Martin Pinzger;Collective Code Bookmarks for Program Comprehension.;101-110;10;Collaborative Program Comprehension;;selected
2011;Giuliano Antoniol,Nasir Ali,Yann-Gael Gueheneuc;Trust-Based Requirements Traceability.;111-120;10;Collaborative Program Comprehension;;selected
2011;Andy Kellens,Johan Fabry,Stephane Ducasse;AspectMaps: A Scalable Visualization of Join Point Shadows.;121-130;10;Aspect-Oriented Programming;;selected
2011;Francois Taiani,Fabiano Cutigi Ferrari,Alessandro Garcia,Rachel Burrows;Reasoning about Faults in Aspect-Oriented Programs: A Metrics-Based Evaluation.;131-140;10;Aspect-Oriented Programming;;selected
2011;Stefan Hanenberg,Dominik Stein;Comparison of a Visual and a Textual Notation to Express Data Constraints in Aspect-Oriented Join Point Selections: A Controlled Experiment.;141-150;10;Aspect-Oriented Programming;;selected
2011;James R. Cordy;Exploring Large-Scale System Similarity Using Incremental Clone Detection and Live Scatterplots.;151-160;10;Software Evolution;;selected
2011;Mircea Lungu,Michele Lanza,Lile Hattori,Marco D'Ambros;Software Evolution Comprehension: Replay to the Rescue.;161-170;10;Software Evolution;;selected
2011;Rudolf Vaas,Martin Feilkas,Markus Herrmannsdorfer,Elmar Jurgens,Florian Deissenboeck,Karl-Heinz Prommer;Feature Profiling for Evolving Systems.;171-180;10;Software Evolution;;selected
2011;Abdelwahab Hamou-Lhadj,Luay Alawneh;MTF: A Scalable Exchange Format for Traces of High Performance Computing Systems.;181-184;4;Short Papers;;
2011;Ahmed E. Hassan,Nicolas Bettenburg,Bram Adams,Michel Smidt;A Lightweight Approach to Uncover Technical Artifacts in Unstructured Data.;185-188;4;Short Papers;;
2011;Michal Gordon-Kiwkowitz,Gera Weiss,Assaf Marron,Nir Eitan,David Harel;On Visualization and Comprehension of Scenario-Based Programs.;189-192;4;Short Papers;;
2011;Anas Mahmoud,Xiaoyong Yang,Nan Niu;Faceted Navigation for Software Exploration.;193-196;4;Short Papers;;
2011;Chris Parnin;Subvocalization - Toward Hearing the Inner Thoughts of Developers.;197-200;4;Short Papers;;
2011;Gabriella Toth,A. Z. Vegh,Tibor Gyimothy,Arpad Beszedes;Adding Process Metrics to Enhance Modification Complexity Prediction.;201-204;4;Short Papers;;
2011;Xiaoyu Shi,Kenny Wong,Mengliao Wang;Capturing Expert Knowledge for Automated Configuration Fault Diagnosis.;205-208;4;Short Papers;;
2011;Salima Hassaine,Giuliano Antoniol,Ferdaous Boughanmi,Yann-Gael Gueheneuc,Sylvie Hamel;Change Impact Analysis: An Earthquake Metaphor.;209-210;2;Posters;;
2011;Gayani Samaraweera,John Quarles,Macneil Shonle;Programming from the Reader's Perspective: Toward an Expectations Approach.;211-212;2;Posters;;
2011;Andreas Stefik,Melissa Stefik,Susanna Siebert,Kim Slattery;Toward Intuitive Programming Languages.;213-214;2;Posters;;
2011;Bram Adams,Mark D. Syer,Ahmed E. Hassan;Industrial Case Study on Supporting the Comprehension of System Behaviour under Load.;215-216;2;Posters;;
2011;Chanchal Kumar Roy,James R. Cordy;DebCheck: Efficient Checking for Open Source Code Clones in Software Systems.;217-218;2;Tool Demonstrations;;
2011;Chanchal Kumar Roy,James R. Cordy;The NiCad Clone Detector.;219-220;2;Tool Demonstrations;;
2011;Kenny Wong,Liang Huang;Anomaly Detection by Monitoring Filesystem Activities.;221-222;2;Tool Demonstrations;;
2011;Philippe Charland,Iman Keivanloo,Juergen Rilling;SeClone - A Hybrid Approach to Internet-Scale Real-Time Code Clone Search.;223-224;2;Tool Demonstrations;;
2011;Ali Mehrabian,Heidar Pirzadeh,Abdelwahab Hamou-Lhadj,Sara Shanian;The Concept of Stratified Sampling of Execution Traces.;225-226;2;Tool Demonstrations;;
2011;Jochen Quante,Andrew Begel;Industrial Program Comprehension Challenge 2011: Archeology and Anthropology of Embedded Control Systems.;227-229;3;Industrial Challenge;;
2011;Nasir Ali;Trustrace: Improving Automated Trace Retrieval through Resource Trust Analysis.;230-233;4;Student Symposium;;
2011;Andrian Marcus,Sonia Haiduc;On the Effect of the Query in IR-based Concept Location.;234-237;4;Student Symposium;;
2011;Soumaya Medini;Scalable Automatic Concept Mining from Execution Traces.;238-241;4;Student Symposium;;
2011;Ripon Kumar Saha,Md. Saidur Rahman 0002,Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider,Jens Krinke;An Empirical Study of the Impacts of Clones in Software Maintenance.;242-245;4;Student Symposium;;
2011;Andrian Marcus,Scott David Ohlemacher;Towards a Benchmark and Automatic Calibration for IR-Based Concept Location.;246-249;4;Student Symposium;;
2011;Chandan Raj Rupakheti,Daqing Hou;Satisfying Programmers' Information Needs in API-Based Programming.;250-253;4;Student Symposium;;
2011;Zohreh Sharafi;A Systematic Analysis of Software Architecture Visualization Techniques.;254-257;4;Student Symposium;;
2011;Zephyrin Soh;Context and Vision: Studying Two Factors Impacting Program Comprehension.;258-261;4;Student Symposium;;
2011;Wei Wu;Modeling Framework API Evolution as a Multi-objective Optimization Problem.;262-265;4;Student Symposium;;
2011;Chanchal Kumar Roy,Minhaz Fahim Zibran;Conflict-Aware Optimal Scheduling of Code Clone Refactoring: A Constraint Programming Approach.;266-269;4;Student Symposium;;
2010;Vaclav Rajlich,Kunrong Chen;Case Study of Feature Location Using Dependence Graph, after 10 Years.;1-3;3;Most Influential Paper from IWPC 2000;;
2010;Marianne Huchard,Clementine Nebut,Violaine Prince,Jean-Remy Falleri,Mathieu Lafourcade,Michel Dao;Automatic Extraction of a WordNet-Like Identifier Network from Software.;4-13;10;Collecting Information;;selected
2010;Bogdan Dit,Meghan Revelle,Denys Poshyvanyk;Using Data Fusion and Web Mining to Support Feature Location in Software.;14-23;10;Collecting Information;;selected
2010;Michele Lanza,Alberto Bacchelli,Marco D'Ambros;Extracting Source Code from E-Mails.;24-33;10;Collecting Information;;selected
2010;Raimund Dachselt,Janet Feigenspan,Sven Apel,Christian Kastner,Mathias Frisch;Visual Support for Understanding Product Lines.;34-35;2;Tool Demonstrations;;
2010;Petru Florin Mihancea;Patrools: Visualizing the Polymorphic Usage of Class Hierarchies.;36-37;2;Tool Demonstrations;;
2010;Patricia Jablonski,Daqing Hou;Renaming Parts of Identifiers Consistently within Code Clones.;38-39;2;Tool Demonstrations;;
2010;Ashgan Fararooy,Dirk Beyer;DepDigger: A Tool for Detecting Complex Low-Level Dependencies.;40-41;2;Tool Demonstrations;;
2010;Ashgan Fararooy,Dirk Beyer;CheckDep: A Tool for Tracking Software Dependencies.;42-43;2;Tool Demonstrations;;
2010;Bo Norregaard Jorgensen,Andrzej Olszak;Featureous: A Tool for Feature-Centric Analysis of Java Software.;44-45;2;Tool Demonstrations;;
2010;Domenico Amalfitano,Armando Polcaro,Porfirio Tramontana,Anna Rita Fasolino;DynaRIA: A Tool for Ajax Web Application Comprehension.;46-47;2;Tool Demonstrations;;
2010;Giuseppe A. Di Lucca,Mario Luca Bernardi;The ConAn Tool to Identify Crosscutting Concerns in Object Oriented Systems.;48-49;2;Tool Demonstrations;;
2010;Daniel Rolls,Carl Joslin,Sven-Bodo Scholz;Unibench: A Tool for Automated and Collaborative Benchmarking.;50-51;2;Tool Demonstrations;;
2010;Lerina Aversano,Maria Tortorella,Fiammetta Marulli;Recovering Traceability Links between Business Process and Software System Components.;52-53;2;Posters;;
2010;Sandro Boccuzzo,Harald Gall;Multi-touch for Software Exploration.;54-55;2;Posters;;
2010;Edson A. Oliveira Jr.,Ladan Tahvildari,Sen Li,Mehdi Amoui;Towards Developing a Meta-model for Comprehending Software Adaptability.;56-57;2;Posters;;
2010;Lewis Berman;Sound as an Aid in Understanding Low-Level Program Architecture.;58-59;2;Posters;;
2010;Mario Marcelo Beron,Daniela Carneiro da Cruz,Nuno Oliveira,Maria Joao Varanda Pereira;SVS, BORS, SVSi: Three Strategies to Relate Problem and Program Domains.;60-61;2;Posters;;
2010;Daniela Carneiro da Cruz,Sergio Areias,Jorge Sousa Pinto;Contract-Based Slicing Helps on Safety Reuse.;62-63;2;Posters;;
2010;Vassilios Tzerpos,Mark Shtern;On the Comparability of Software Clustering Algorithms.;64-67;4;Supporting Program Comprehension;;selected
2010;Denys Poshyvanyk,Rocco Oliveto,Andrea De Lucia,Malcom Gethers;On the Equivalence of Information Retrieval Methods for Automated Traceability Link Recovery.;68-71;4;Supporting Program Comprehension;;selected
2010;Ahmad Taherkhani;Recognizing Sorting Algorithms with the C4.5 Decision Tree Classifier.;72-75;4;Supporting Program Comprehension;;selected
2010;Hao Yuan,Ying Zou,Liliane Barbour;A Technique for Just-in-Time Clone Detection in Large Scale Systems.;76-79;4;Supporting Program Comprehension;;selected
2010;Ashgan Fararooy,Dirk Beyer;A Simple and Effective Measure for Complex Low-Level Dependencies.;80-83;4;Supporting Program Comprehension;;selected
2010;Julius Davies,Massimiliano Di Penta,Daniel M. German;Understanding and Auditing the Licensing of Open Source Software Distributions.;84-93;10;Program Analysis;;selected
2010;Lars Heinemann,Daniel Ratiu;Utilizing Web Search Engines for Program Analysis.;94-103;10;Program Analysis;;selected
2010;Ralf Lammel,Ekaterina Pek;Vivisection of a Non-Executable, Domain-Specific Language - Understanding (the Usage of) the P3P Language.;104-113;10;Program Analysis;;selected
2010;Ahmed E. Hassan,Anand Sinha,Ying Zou,Brian Chan;Visualizing the Results of Field Testing.;114-123;10;Software Quality;;selected
2010;Ahmed E. Hassan,Nicolas Bettenburg;Studying the Impact of Social Structures on Software Quality.;124-133;10;Software Quality;;selected
2010;Francesco Pacilio,Luigi Cerulo,Gerardo Canfora,Massimiliano Di Penta;An Exploratory Study of Factors Influencing Change Entropy.;134-143;10;Software Quality;;selected
2010;Mahmoud O. Elish;Exploring the Relationships between Design Metrics and Package Understandability: A Case Study.;144-147;4;People;;selected
2010;Maen Hammad,Michael L. Collard,Jonathan I. Maletic;Measuring Class Importance in the Context of Design Evolution.;148-151;4;People;;selected
2010;Joost Visser,Arie van Deursen,Eric Bouwers,Carola Lilienthal;A Cognitive Model for Software Architecture Complexity.;152-155;4;People;;selected
2010;Surafel Lemma Abebe,Paolo Tonella;Natural Language Parsing of Program Element Names for Concept Extraction.;156-159;4;People;;selected
2010;Ryan Holeman,Andrew Sutton,Jonathan I. Maletic;Identification of Idiom Usage in C++ Generic Libraries.;160-169;10;Software and System Structure;;selected
2010;Patricia Jablonski,Daqing Hou;Aiding Software Maintenance with Copy-and-Paste Clone-Awareness.;170-179;10;Software and System Structure;;selected
2010;Carmela D'Amico,Giuseppe Scanniello,Anna D'Amico,Teodora D'Amico;Using the Kleinberg Algorithm and Vector Space Model for Software System Clustering.;180-189;10;Software and System Structure;;selected
2010;Andrew Begel;From Program Comprehension to People Comprehension.;190-191;2;Industrial Challenges;;
2010;Daniela Carneiro da Cruz,Mario Marcelo Beron,Nuno Oliveira,Maria Joao Varanda Pereira;Influence of Synchronized Domain Visualizations on Program Comprehension.;192-195;4;Working Session;;
2010;Bonita Sharif,Jonathan I. Maletic;An Eye Tracking Study on camelCase and under_score Identifier Styles.;196-205;10;Human Factors;;selected
2010;Hye Jung Choi,Sukanya Ratanotayanon,Susan Elliott Sim;My Repository Runneth Over: An Empirical Study on Diversifying Data Sources to Improve Feature Search.;206-215;10;Human Factors;;selected
2010;Andy Zaidman,Margaret-Anne D. Storey,R. Ian Bull,Nick Matthijssen,Arie van Deursen;Connecting Traces: Understanding Client-Server Interactions in Ajax Applications.;216-225;10;Human Factors;;selected
2009;Vaclav Rajlich;Intensions are a key to program comprehension.;1-9;9;Keynote;;
2009;Maksym Petrenko,Vaclav Rajlich;Variable granularity for improving precision of impact analysis.;10-19;10;Impact Analysis and Changes;;selected
2009;Maen Hammad,Michael L. Collard,Jonathan I. Maletic;Automatically identifying changes that impact code-to-design traceability.;20-29;10;Impact Analysis and Changes;;selected
2009;Michael W. Godfrey,Richard C. Holt,Abram Hindle,Daniel M. German;Automatic classication of large changes into maintenance categories.;30-39;10;Impact Analysis and Changes;;selected
2009;Eric Larson;A plethora of paths.;40-49;10;Static Analysis;;selected
2009;Ana Milanova,Yin Liu;Practical static analysis for inference of security-related program properties.;50-59;10;Static Analysis;;selected
2009;Dehua Zhang,Ekwa Duala-Ekoko,Laurie J. Hendren;Impact analysis and visualization toolkit for static crosscutting in AspectJ.;60-69;10;Static Analysis;;selected
2009;Rajiv Gupta,Dennis Jeffrey,Min Feng,Neelam Gupta;BugFix: A learning-based tool to assist developers in fixing bugs.;70-79;10;Cognitive and Other Issues;;selected
2009;Chris Parnin,Spencer Rugaber;Resumption strategies for interrupted programming tasks.;80-89;10;Cognitive and Other Issues;;selected
2009;Petcharat Viriyakattiyaporn,Gail C. Murphy,David Shepherd;Using activity traces to characterize programming behaviour beyond the lab.;90-94;5;Cognitive and Other Issues;;selected
2009;Tara Kelly,Jim Buckley;An in-vivo study of the cognitive levels employed by programmers during software maintenance.;95-99;5;Cognitive and Other Issues;;selected
2009;Bas Cornelissen,Andy Zaidman,Bart Van Rompaey,Arie van Deursen;Trace visualization for program comprehension: A controlled experiment.;100-109;10;Visualization and Sonification;;selected
2009;Andreas Stefik,Ed Gellenbeck;Using spoken text to aid debugging: An empirical study.;110-119;10;Visualization and Sonification;;selected
2009;SooBeen Kim,Ivica Ico Bukvic,Eli Tilevich,Khaled Hussein;Sonification design guidelines to enhance program comprehension.;120-129;10;Visualization and Sonification;;selected
2009;Sharon Simmons,Dennis Edwards,Eric Golden,Norman Wilde;Instrumenting time-sensitive software for feature location.;130-137;8;Features and Concerns;;selected
2009;Daltro Jose Nunes,Eduardo Magno Lages Figueiredo,Claudio Sant'Anna,Jonathan P. Whittle,Bruno Carreiro da Silva,Alessandro Garcia;Crosscutting patterns and design stability: An exploratory analysis.;138-147;10;Features and Concerns;;selected
2009;Annibale Panichella,Giovanni Capobianco,Rocco Oliveto,Andrea De Lucia,Sebastiano Panichella;On the role of the nouns in IR-based traceability recovery.;148-157;10;Features and Concerns;;selected
2009;Marcia Davis,Dawn Lawrie,Christopher Morrell,David M. Binkley;To camelcase or under_score.;158-167;10;Source Code Reading;;selected
2009;Uri Dekel,James D. Herbsleb;Reading the documentation of invoked API functions in program comprehension.;168-177;10;Source Code Reading;;selected
2009;Jasvir Nagra,Marco Torchiano,Massimiliano Di Penta,Paolo Falcarin,Filippo Ricca,Paolo Tonella,Mariano Ceccato;The effectiveness of source code obfuscation: An experimental assessment.;178-187;10;Source Code Reading;;selected
2009;Daniel Ratiu,Martin Feilkas,Elmar Jurgens;The loss of architectural knowledge during system evolution: An industrial case study.;188-197;10;Architecture and Design;;selected
2009;Alexander Serebrenik,Mark van den Brand,Serguei A. Roubtsov;Dn-based architecture assessment of Java Open Source software systems.;198-207;10;Architecture and Design;;selected
2009;Alexander Binun,Gunter Kniesel;Standing on the shoulders of giants - A data fusion approach to design pattern detection.;208-217;10;Architecture and Design;;selected
2009;Meghan Revelle,Denys Poshyvanyk;An exploratory study on assessing feature location techniques.;218-222;5;Short Papers I;;
2009;Johan Hall,Welf Lowe,Jens Nilsson,Joakim Nivre;Natural language parsing for fact extraction from source code.;223-227;5;Short Papers I;;
2009;Derrin Pierret,Denys Poshyvanyk;An empirical exploration of regularities in open-source software lexicons.;228-232;5;Short Papers I;;
2009;Scott Grant,James R. Cordy;Vector space analysis of software clones.;233-237;5;Short Papers I;;
2009;Patricia Jablonski,Daqing Hou,Ferosh Jacob;CnP: Towards an environment for the proactive management of copy-and-paste programming.;238-242;5;Short Papers I;;
2009;Etienne Duris,Gilles Roussel,Michel Chilowicz;Syntax tree fingerprinting for source code similarity detection.;243-247;5;Short Papers I;;
2009;Vassilios Tzerpos,Mark Shtern;Methods for selecting and improving software clustering algorithms.;248-252;5;Short Papers II;;
2009;Stephane Ducasse,David Rothlisberger,Romain Robbes,Oscar Nierstrasz,Damien Pollet;Supporting task-oriented navigation in IDEs with configurable HeatMaps.;253-257;5;Short Papers II;;
2009;Reinhard Schauer,Rudolf K. Keller;A case for concept programs.;258-262;5;Short Papers II;;
2009;Katerina Troshina,Alexander Fokin,Alexander Chernov;Profile-based type reconstruction for decompilation.;263-267;5;Short Papers II;;
2009;Bonita Sharif,Jonathan I. Maletic;An empirical study on the comprehension of stereotyped UML class diagram layouts.;268-272;5;Short Papers II;;
2009;Huzefa H. Kagdi,Denys Poshyvanyk;Who can help me with this change request?;273-277;5;Short Papers II;;
2009;Huzefa H. Kagdi,Yann-Gael Gueheneuc,Jonathan I. Maletic;Working session: Using eye-tracking to understand program comprehension.;278-279;2;Working Sessions;;
2009;Marco Torchiano,Alberto Sillitti;TDD = too dumb developers? Implications of Test-Driven Development on maintainability and comprehension of software.;280-282;3;Working Sessions;;
2009;Takashi Ishio,Katsuro Inoue,Munakata Satoshi;OGAN: Visualizing object interaction scenarios based on dynamic interaction context.;283-284;2;Tool Demonstrations;;
2009;Manoel Gomes de Mendonca Neto,Daniel Porto,Sandra Camargo Pinto Ferraz Fabbri;CRISTA: A tool to support code comprehension based on visualization and reading technique.;285-286;2;Tool Demonstrations;;
2009;Sunghun Kim,Jim Whitehead,Shivkumar Shivaji;Kenyon-web: Reconfigurable web-based feature extractor.;287-288;2;Tool Demonstrations;;
2009;R. E. Kurt Stirewalt,Yi Huang,Laura K. Dillon;Prototyping synchronization policies for existing programs.;289-290;2;Tool Demonstrations;;
2009;Manoel Gomes de Mendonca Neto,Rodrigo Chaves Magnavita,Glauco de Figueiredo Carneiro;Proposing a visual approach to support the characterization of software comprehension activities.;291-292;2;Tool Demonstrations;;
2009;Andrew Haywood,Brock Dunda,Andreas Stefik,Shahzada Mansoor,Daniel Garcia;SODBeans.;293-294;2;Tool Demonstrations;;
2009;Zhixiong Han,Liqian Yu,Jianhua Zhao,Xuandong Li,Xin Chen,Linzhang Wang;Design pattern directed clustering for understanding open source code.;295-296;2;Posters;;
2009;Olga Baysal,Michael W. Godfrey,Robin Cohen;A bug you like: A framework for automated assignment of bugs.;297-298;2;Posters;;
2009;Sukanya Ratanotayanon,Susan Elliott Sim;Creating task-based concern maps by merging concern fragments.;299-300;2;Posters;;
2009;Mireille Samia,Michael Leuschel;Towards pie tree visualization of graphs and large software architectures.;301-302;2;Posters;;
2009;Sukanya Ratanotayanon,Leyna Cotran,Susan Elliott Sim;Structure transition graphs: An ECG for program comprehension?;303-304;2;Posters;;
2009;Joshua Garcia,Nenad Medvidovic,Daniel Popescu;Enabling more precise dependency analysis in event-based systems.;305-306;2;Posters;;
2009;Khaironi Yatim Sharif,Jim Buckley;Observation of Open Source programmers' information seeking.;307-308;2;Posters;;
2009;Andreas Bartho;Creating and maintaining tutorials with DEFT.;309-310;2;Posters;;
2009;Dusan Brestovansky,Timothy Lethbridge,Andrew Forward;Improving program comprehension by enhancing program constructs: An analysis of the Umple language.;311-312;2;Posters;;
2009;Erik Linstead,Pierre Baldi,Cristina Videira Lopes,Lindsey Hughes;Capturing Java naming conventions with first-order Markov models.;313-314;2;Posters;;
2009;Steven P. Reiss,Suman Karumuri;Automatic detection of internal queues and stages in message processing systems.;315-316;2;Posters;;
2009;Chris Parnin,Carsten Gorg,Spencer Rugaber;TaskBoard: Tracking pertinent task artifacts and plans.;317-318;2;Posters;;
2009;Yachai Limpiyakorn,Benjapol Auprasert;Representing source code with Granular hierarchical structures.;319-320;2;Posters;;
2008;Suraj C. Kothari;Scalable Program Comprehension for Analyzing Complex Defects.;3-4;2;Keynotes;;
2008;Terence Parr;The Reuse of Grammars with Embedded Semantic Actions.;5-10;6;Keynotes;;
2008;Radu Vanciu,Maksym Petrenko,Vaclav Rajlich;Partial Domain Comprehension in Software Evolution and Maintenance.;13-22;10;Software Evolution;;selected
2008;Scott D. Fleming,Eileen Kraemer,R. E. Kurt Stirewalt,Laura K. Dillon,Shaohua Xie;Refining Existing Theories of Program Comprehension During Maintenance for Concurrent Software.;23-32;10;Software Evolution;;selected
2008;Michael W. Godfrey,Xinyi Dong;Identifying Architectural Change Patterns in Object-Oriented Systems.;33-42;10;Software Evolution;;selected
2008;Jason O. Hallstrom,Andrew R. Dalton;A Toolkit for Visualizing the Runtime Behavior of TinyOS Applications.;43-52;10;Dynamic Analysis;;selected
2008;Giuliano Antoniol,Marc Eaddy,Yann-Gael Gueheneuc,Alfred V. Aho;CERBERUS: Tracing Requirements to Source Code Using Information Retrieval, Dynamic Analysis, and Program Analysis.;53-62;10;Dynamic Analysis;;selected
2008;David Rothlisberger,Oscar Nierstrasz,Orla Greevy;Exploiting Runtime Information in the IDE.;63-72;10;Dynamic Analysis;;selected
2008;Jochen Quante;Do Dynamic Object Process Graphs Support Program Understanding? - A Controlled Experiment.;73-82;10;Program Comprehension Studies;;selected
2008;Steve Maex,Dawn Lawrie,Christopher Morrell,David M. Binkley;Impact of Limited Memory Resources.;83-92;10;Program Comprehension Studies;;selected
2008;Genoveffa Tortora,Carmine Gravino,Andrea De Lucia,Rocco Oliveto;Data Model Comprehension: An Empirical Comparison of ER and UML Class Diagrams.;93-102;10;Program Comprehension Studies;;selected
2008;Ahron Abadi,Mordechai Nisenson,Yahalomit Simionovici;A Traceability Technique for Specifications.;103-112;10;Domain Terms;;selected
2008;Andrian Marcus,Sonia Haiduc;On the Use of Domain Terms in Source Code.;113-122;10;Domain Terms;;selected
2008;Lori L. Pollock,K. Vijay-Shanker,Emily Hill,Giriprasad Sridhara;Identifying Word Relations in Software: A Comparative Study of Semantic Similarity Tools.;123-132;10;Domain Terms;;selected
2008;Michael W. Godfrey,Richard C. Holt,Abram Hindle;Reading Beside the Lines: Indentation as a Proxy for Complexity Metric.;133-142;10;Metrics;;selected
2008;Yann-Gael Gueheneuc,Simon Denier;Mendel: A Model, Metrics, and Rules to Understand Class Hierarchies.;143-152;10;Metrics;;selected
2008;Chanchal Kumar Roy,James R. Cordy;Scenario-Based Comparison of Clone Detection Techniques.;153-162;10;Cloning, Slicing, and Parsing;;selected
2008;Arpad Beszedes,Laszlo Vidacs,Judit Jasz,Tibor Gyimothy;Combining Preprocessor Slicing with C/C++ Language Slicing.;163-171;9;Cloning, Slicing, and Parsing;;selected
2008;Chanchal Kumar Roy,James R. Cordy;NICAD: Accurate Detection of Near-Miss Intentional Clones Using Flexible Pretty-Printing and Code Normalization.;172-181;10;Cloning, Slicing, and Parsing;;
2008;Huzefa H. Kagdi,Abdulkareem Alali,Jonathan I. Maletic;What's a Typical Commit? A Characterization of Open Source Software Repositories.;182-191;10;Analysis of Revision History;;selected
2008;Pierre van de Laar,Johannes C. van Vliet,Lennart Holland,Adam Vanya,Steven Klusener;Assessing Software Archives with Evolutionary Clusters.;192-201;10;Analysis of Revision History;;selected
2008;Putra Manggala,Martin P. Robillard;Reusing Program Investigation Knowledge for Code Understanding.;202-211;10;Analysis of Revision History;;selected
2008;Alberto Sillitti,Irina Diana Coman;Automated Identification of Tasks in Development Sessions.;212-217;6;Short Paper Session 1;;
2008;Maxim Shevertalov,Spiros Mancoridis,William M. Mongan;Re-Engineering a Reverse Engineering Portal to a Distributed SOA.;218-223;6;Short Paper Session 1;;
2008;Brian R. von Konsky,David A. McMeekin,Elizabeth Chang,David J. A. Cooper;Checklist Inspections and Modifications: Applying Bloom's Taxonomy to Categorise Developer Comprehension.;224-229;6;Short Paper Session 1;;
2008;Stephane Ducasse,Awais Rashid,Muhammad Usman Bhatti;Aspect Mining in Procedural Object Oriented Code.;230-235;6;Short Paper Session 1;;
2008;Abhishek Rohatgi,Juergen Rilling,Abdelwahab Hamou-Lhadj;An Approach for Mapping Features to Code Based on Static and Dynamic Analysis.;236-241;6;Short Paper Session 2;;
2008;Daniel Ratiu,Jan Jurjens;Evaluating the Reference and Representation of Domain Concepts in APIs.;242-247;6;Short Paper Session 2;;
2008;Daniel Ratiu,Martin Feilkas;Ensuring Well-Behaved Usage of APIs through Syntactic Constraints.;248-253;6;Short Paper Session 2;;
2008;Patrick Knab,Katja Grafenhain,Harald Gall,Martin Pinzger;A Tool for Visual Understanding of Source Code Dependencies.;254-259;6;Short Paper Session 2;;
2008;Daniela Carneiro da Cruz,Ruben Filipe Cardoso da Fonseca,Maria Joao Varanda Pereira,Pedro Rangel Henriques;How to Interconnect Operational and Behavioral Views of Web Applications.;263-267;5;Tool Demonstrations;;
2008;Stefan Voigt,Johannes Bohnet,Jurgen Dollner;Locating and Understanding Features of Complex Software Systems by Synchronizing Time-, Collaboration- and Code-Focused Views on Execution Traces.;268-271;4;Tool Demonstrations;;
2008;Tatsuya Sato,Buntarou Shizuki,Jiro Tanaka;Support for Understanding GUI Programs by Visualizing Execution Traces Synchronized with Screen Transitions.;272-275;4;Tool Demonstrations;;
2008;Dragan Gasevic,Rene Witte,Juergen Rilling,Jeff Z. Pan;Semantic Technologies in System Maintenance (STSM 2008).;279-282;4;Workshops;;
2008;Thomas Roy Dean,Joost Visser;Industrial Realities of Program Comprehension (IRPC 2008).;283-284;2;Workshops;;
2008;Michael W. Godfrey,Mathieu Verbaere,Tudor Girba;Query Technologies and Applications for Program Comprehension (QTAPC 2008).;285-288;4;Workshops;;
2007;Mark Harman;Search Based Software Engineering for Program Comprehension.;3-13;11;Keynotes;;
2007;Gregor Kiczales;Making the Code Look Like the Design - Aspects and Other Recent Work.;14;1;Keynotes;;
2007;Spiros Mancoridis,Jay Kothari,Trip Denton,Ali Shokoufandeh;Reducing Program Comprehension Effort in Evolving Software by Recognizing Feature Implementation Convergence.;17-26;10;Technical Session 1: Feature and Concept Analysis;;selected
2007;Maurice M. Carey,Gerald C. Gannod;Recovering Concepts from Source Code with Automated Concept Identification.;27-36;10;Technical Session 1: Feature and Concept Analysis;;selected
2007;Andrian Marcus,Denys Poshyvanyk;Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code.;37-48;12;Technical Session 1: Feature and Concept Analysis;;selected
2007;Danny Holten,Bas Cornelissen,Jarke J. van Wijk,Andy Zaidman,Leon Moonen,Arie van Deursen;Understanding Execution Traces Using Massive Sequence and Circular Bundle Views.;49-58;10;Technical Session 2: Dynamic Analysis;;selected
2007;Orla Greevy,Oscar Nierstrasz,Adrian Lienhard;Tracking Objects to Detect Feature Dependencies.;59-68;10;Technical Session 2: Dynamic Analysis;;selected
2007;Robert Patterson,Jonathan Brown,Andreas Stefik,Roger T. Alexander;WAD: A Feasibility study using the Wicked Audio Debugger.;69-80;12;Technical Session 2: Dynamic Analysis;;selected
2007;Michael W. Godfrey;A Hybrid Program Model for Object-Oriented Reverse Engineering.;81-90;10;Technical Session 3: Conceptual Models;;selected
2007;Daniel Ratiu,Florian Deissenboeck;From Reality to Programs and (Not Quite) Back Again.;91-102;12;Technical Session 3: Conceptual Models;;selected
2007;Brian de Alwis,Gail C. Murphy,Martin P. Robillard;A Comparative Study of Three Program Exploration Tools.;103-112;10;Technical Session 4: Empirical Studies;;selected
2007;Huzefa H. Kagdi,Jonathan I. Maletic,Shehnaaz Yusuf;Assessing the Comprehension of UML Class Diagrams via Eye Tracking.;113-122;10;Technical Session 4: Empirical Studies;;selected
2007;R. E. Kurt Stirewalt,Eileen Kraemer,Shaohua Xie;Empirical Evaluation of a UML Sequence Diagram with Adornments to Support Understanding of Thread Interactions.;123-134;12;Technical Session 4: Empirical Studies;;selected
2007;Michael W. Godfrey,Ahmed E. Hassan,Lijie Zou;Detecting Interaction Coupling from Task Interaction Histories.;135-144;10;Technical Session 5: Mining Software Repositories;;selected
2007;Huzefa H. Kagdi,Bonita Sharif,Jonathan I. Maletic;Mining Software Repositories for Traceability Links.;145-154;10;Technical Session 5: Mining Software Repositories;;selected
2007;Romain Robbes,Michele Lanza;Characterizing and Understanding Development Sessions.;155-166;12;Technical Session 5: Mining Software Repositories;;selected
2007;Thomas Roy Dean,Chanchal Kumar Roy,Mohammad Gias Uddin,Banani Roy;Evaluating Aspect Mining Techniques: A Case Study.;167-176;10;Technical Session 6: Aspects and Change;;selected
2007;Siavash Mirarab,Ladan Tahvildari,Alaa Hassouna;Using Bayesian Belief Networks to Predict Change Propagation in Software Systems.;177-188;12;Technical Session 6: Aspects and Change;;selected
2007;Welf Lowe,Niklas Pettersson;A Non-conservative Approach to Software Pattern Detection.;189-198;10;Technical Session 7: Static Analysis;;selected
2007;Maokeng Hung,Ying Zou;Recovering Workflows from Multi Tiered E-commerce Systems.;198-207;10;Technical Session 7: Static Analysis;;selected
2007;Yi Zhang,S. Purushothaman Iyer;Error Report Driven Post-Mortem Analysis.;208-220;13;Technical Session 7: Static Analysis;;selected
2007;Michel R. V. Chaudron,Christian Lange;Interactive Views to Improve the Comprehension of UML Models - An Experimental Validation.;221-230;10;Technical Session 8: Visualization;;selected
2007;Richard Wettel,Michele Lanza;Program Comprehension through Software Habitability.;231-240;10;Technical Session 8: Visualization;;selected
2007;Jenny Samuelsson,Ola Sundin,Rogardt Heldal;Scenario Explorer: Interactive Visualization of Use Cases.;241-252;12;Technical Session 8: Visualization;;selected
2007;Laurie J. Hendren,Nomair A. Naeem,Michael Batchelder;Metrics for Measuring the Effectiveness of Decompilers and Obfuscators.;253-258;6;Short Papers Session;;
2007;Anna Ruokonen,Johannes Koskinen,Juanjuan Jiang,Tarja Systa;Constructing Usage Scenarios for API Redocumentation.;259-264;6;Short Papers Session;;
2007;Imed Hammouda,Kai Koskimies,Tommi Reinikainen,Juha Laiho,Tarja Systa;Software Comprehension through Concern-based Queries.;265-270;6;Short Papers Session;;
2007;Michael L. Collard,C. Dylan Shearer;Enforcing Constraints Between Documentary Comments and Source Code.;271-280;10;Short Papers Session;;
2007;Scott R. Tilley;15 Years of Program Comprehension.;279-280;2;Working Sessions;;
2007;Massimiliano Di Penta,Eileen Kraemer,R. E. Kurt Stirewalt;Designing your Next Empirical Study on Program Comprehension.;281-285;5;Working Sessions;;
2007;H. James Hoover,Michael Smit,Giuseppe A. Di Lucca,Bruce Fraser,Eleni Stroulia;Comprehending Aspect-Oriented Programs: Challenges and Open Issues.;286-292;7;Working Sessions;;
2007;Andrejs Jermakovics,Marco Scotto,Alberto Sillitti,Giancarlo Succi;Lagrein: Visualizing User Requirements and Development Effort.;293-296;4;Tool Demonstrations;;
2007;Rodrigo A. Vivanco;Use of a Genetic Algorithm to Identify Source Code Metrics Which Improves Cognitive Complexity Predictive Models.;297-300;4;Tool Demonstrations;;
2006;Robert S. Autor;Evolving a Legacy Application Portfolio at Sallie Mae: Program Comprehension and Beyond.;;0;Keynote Address;;
2006;Scott R. Tilley;Program Redocumentation: Lessons Learned & Future Challenges.;;0;Keynote Address;;
2006;Dawn Lawrie,David M. Binkley,Christopher Morrell,Henry Feild;What's in a Name? A Study of Identifiers.;3-12;10;Experimental Studies;;selected
2006;Chris Parnin,Carsten Gorg;Building Usage Contexts During Program Comprehension.;13-22;10;Experimental Studies;;selected
2006;Zhenchang Xing,Curtis Schofield,Brendan Tansey,Eleni Stroulia;Digging the Development Dust for Refactorings.;23-34;12;Experimental Studies;;selected
2006;Beat Fluri,Harald Gall;Classifying Change Types for Qualifying Change Couplings.;35-45;11;Evolution;;selected
2006;Ahmed E. Hassan,Jay Kothari,Spiros Mancoridis,Ali Shokoufandeh;Studying the Evolution of Software Systems Using Change Clusters.;46-55;10;Evolution;;selected
2006;Radu Marinescu,Mihai Balint,Tudor Girba;How Developers Copy.;56-68;13;Evolution;;selected
2006;Letha H. Etzkorn,Bradley L. Vinz;A Synergistic Approach to Program Comprehension.;69-73;5;Short Papers;;
2006;Andy Zaidman,Serge Demeyer,Bart Du Bois;How Webmining and Coupling Metrics Improve Early Program Comprehension.;74-78;5;Short Papers;;
2006;Daniel Ratiu,Florian Deissenboeck;Programs are Knowledge Bases.;79-83;5;Short Papers;;
2006;Kamran Sartipi,Hossein Safyallah;Dynamic Analysis of Software Systems using Execution Pattern Mining.;84-88;5;Short Papers;;
2006;Andreas Stefik,Kelly Fitz,Roger T. Alexander;Layered Program Auralization: Using Music to Increase Runtime Program Comprehension and Debugging Effectiveness.;89-93;5;Short Papers;;
2006;Dean Jin,James R. Cordy;Integrating Reverse Engineering Tools Using a Service-Sharing Methodology.;94-99;6;Short Papers;;
2006;R. Ian Bull,Margaret-Anne D. Storey,Marin Litoiu,Jean-Marie Favre;An Architecture to Support Model Driven Software Visualization.;100-106;7;Short Papers;;
2006;Yi Zhang,Raoul Praful Jetley,S. Purushothaman Iyer;Using Abstraction-driven Slicing for Postmortem Analysis of Software.;107-116;10;Static Analysis;;selected
2006;Hee Beng Kuan Tan,Doanh Trinh,Minh Ngoc Ngo;Automated Extraction of Database Interactions in Web Applications.;117-126;10;Static Analysis;;selected
2006;Maokeng Hung,Ying Zou;An Approach for Extracting Workflows from E-Commerce Applications.;127-136;10;Static Analysis;;selected
2006;Giuliano Antoniol,Andrian Marcus,Yann-Gael Gueheneuc,Denys Poshyvanyk,Vaclav Rajlich;Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification.;137-148;12;Static Analysis;;selected
2006;Dawn Lawrie,David M. Binkley,Henry Feild;Leveraged Quality Assessment using Information Retrieval Techniques.;149-158;10;Quality Assessment;;selected
2006;Mazeiar Salehie,Ladan Tahvildari,Shimin Li;A Metric-Based Heuristic Framework to Detect Object-Oriented Design Flaws.;159-168;10;Quality Assessment;;selected
2006;Cristina Marinescu;Identification of Design Roles for the Assessment of Design Quality in Enterprise Applications.;169-180;12;Quality Assessment;;selected
2006;Timothy Lethbridge,Abdelwahab Hamou-Lhadj;Summarizing the Content of Large Traces to Facilitate the Understanding of the Behaviour of a Software System.;181-190;10;Dynamic Analysis;;selected
2006;Sokhom Pheng,Clark Verbrugge;Dynamic Data Structure Analysis for Java Programs.;191-201;11;Dynamic Analysis;;selected
2006;Theo D'Hondt,Isabel Michiels,Coen De Roover,Kris Gybels,Kim Gybels;An Approach to High-Level Behavioral Program Documentation Allowing Lightweight Verification.;202-211;10;Dynamic Analysis;;selected
2006;Johannes Koskinen,Markus Kettunen,Tarja Systa;Profile-Based Approach to Support Comprehension of Software Behavior.;212-224;13;Dynamic Analysis;;selected
2006;Keith Gallagher,Nicolas Gold,Lewis I. Berman,Sebastian Danicic;The Sound of Software: Using Sonification to Aid Comprehension.;225-229;5;Working Sessions;;
2006;Massimiliano Di Penta,Giuseppe A. Di Lucca;Experimental Settings in Program Comprehension: Challenges and Open Issues.;229-234;6;Working Sessions;;
2006;Liam O'Brien,Dennis B. Smith,Kostas Kontogiannis;Working Session: Program Comprehension and Migration Strategies for Web Service and Service-Oriented Architectures.;235-240;6;Working Sessions;;
2006;Brendan Cleary,Christopher Exton;The Cognitive Assignment Eclipse Plug-in.;241-244;4;Tool Demonstrations;;
2006;Christopher Exton,Aiden Grandfield;INFORM: A Framework for Performance Informed Software Development.;245-247;3;Tool Demonstrations;;
2006;Ahmed E. Hassan,Dirk Beyer;Evolution Storyboards: Visualization of Software Structure Dynamics.;248-251;4;Tool Demonstrations;;
2006;Andrian Marcus,Denys Poshyvanyk,Yubo Dong;JIRiSS - an Eclipse plug-in for Source Code Exploration.;252-255;4;Tool Demonstrations;;
2006;Lingdong Ye,Kamran Sartipi,Hossein Safyallah;Alborz: An Interactive Toolkit to Extract Static and Dynamic Views of a Software System.;256-259;4;Tool Demonstrations;;
2006;Christopher Exton,Margaret-Anne D. Storey,Michael Desmond;Fluid Source Code Views.;260-263;4;Tool Demonstrations;;
2006;Ladan Tahvildari,Shimin Li;JComp: A Reuse-Driven Componentization Framework for Java Applications.;264-267;4;Tool Demonstrations;;
2006;Matias Madou,Ludo Van Put,Koenraad De Bosschere;Understanding Obfuscated Code.;268-274;7;Tool Demonstrations;;
2006;Tara Kelly,Jim Buckley;A Context-Aware Analysis Scheme for Bloom's Taxonomy.;275-284;10;Cognitive Approaches;;selected
2006;Petru Florin Mihancea;Towards a Client Driven Characterization of Class Hierarchies.;285-294;10;Cognitive Approaches;;selected
2006;Daqing Hou,H. James Hoover,Kenny Wong,Daniel L. Moise;Reverse Engineering Scripting Language Extensions.;295-306;12;Cognitive Approaches;;selected
2006;Genoveffa Tortora,Andrea De Lucia,Rocco Oliveto,Fausto Fasano;Can Information Retrieval Techniques Effectively Support Traceability Link Recovery?;307-316;10;Traceability and Languages;;selected
2006;Massimiliano Di Penta,Andrea De Lucia,Rocco Oliveto,Francesco Zurolo;Improving Comprehensibility of Source Code via Traceability Information: a Controlled Experiment.;317-326;10;Traceability and Languages;;selected
2006;Laurie J. Hendren,Nomair A. Naeem;Programmer-friendly Decompiled Java.;327-336;10;Traceability and Languages;;selected
2005;;Message from the Chairs.;;0;;;
2005;;Conference Committees.;;0;;;
2005;;Sponsoring Organizations.;;0;;;
2005;Douglas R. Smith;Comprehension by Derivation.;3-9;7;Keynote;;
2005;Tom Tourwe,Kim Mens,Leon Moonen,Paolo Tonella,Marius Marin,Mariano Ceccato;A Qualitative Comparison of Three Aspect Mining Techniques.;13-22;10;Concerns and Concepts;;selected
2005;Tiffany Broadbent,Meghan Revelle,David Coppit;Understanding Concerns in Software: Insights Gained from Two Case Studies.;23-32;10;Concerns and Concepts;;selected
2005;Joseph Buchta,Andrian Marcus,Maksym Petrenko,Vaclav Rajlich,Andrey Sergeyev;Static Techniques for Concept Location in Object-Oriented Code.;33-42;10;Concerns and Concepts;;selected
2005;Timothy Lethbridge,Adam Murray;Presenting Micro-Theories of Program Comprehension in Pattern Form.;45-54;10;Theories of Program Comprehension;;selected
2005;Jorma Sajaniemi,Raquel Navarro-Prieto;An Investigation into Professional Programmers' Mental Representations of Variables.;55-64;10;Theories of Program Comprehension;;selected
2005;Christopher Exton,Pamela O'Shea;An Investigation of Java Abstraction Usage for Program Modifications.;65-74;10;Theories of Program Comprehension;;selected
2005;Douglas Kirk,Marc Roper,Murray Wood;Identifying and Addressing Problems in Framework Reuse.;77-86;10;Framework Understanding;;selected
2005;H. James Hoover,Daqing Hou,Kenny Wong;What Can Programmer Questions Tell Us About Frameworks?;87-96;10;Framework Understanding;;selected
2005;Markus Pizka,Florian Deissenboeck;Concise and Consistent Naming.;97-106;10;Framework Understanding;;selected
2005;Anthony Cox,Michael L. Collard;Working Session: Textual Views of Source Code to Support Comprehension.;109-112;4;Working Session;;
2005;Ketil Stolen,Ida Hogganvik;On the Comprehension of Security Risk Scenarios.;115-124;10;Empirical Studies;;selected
2005;Jim Buckley,Michael P. O'Brien;Modelling the Information-Seeking Behaviour of Programmers - An Empirical Approach.;125-134;10;Empirical Studies;;selected
2005;Anneliese von Mayrhauser,Andreas Stefik,Nina Picone,Sudipto Ghosh;A COTS Component Comprehension Process.;135-144;10;Empirical Studies;;selected
2005;Mark Zarins,Paul Anderson;The CodeSurfer Software Understanding Platform.;147-148;2;Tool Demonstrations;;
2005;Joseph Buchta,Maksym Petrenko,Vaclav Rajlich,Jonathan Buckner;JRipples: A Tool for Program Comprehension during Incremental Change.;149-152;4;Tool Demonstrations;;
2005;Jussi Koskinen;HyperSoft System: Tool Demonstration and Use Example.;153-156;4;Tool Demonstrations;;
2005;Lianjiang Fu,Timothy Lethbridge,Abdelwahab Hamou-Lhadj;SEAT: A Usable Trace Analysis Tool.;157-160;4;Tool Demonstrations;;
2005;Grace Gui,Hausi A. Muller,Holger M. Kienle;REGoLive: Web Site Comprehension with Viewpoints.;161-164;4;Tool Demonstrations;;
2005;Steven P. Reiss;Tool Demonstration: CHET: Checking Specifications in Java Systems.;165-168;4;Tool Demonstrations;;
2005;Steven P. Reiss,Manos Renieris;Tool Demonstration: JIVE and JOVE: Java as it Happens.;169-172;4;Tool Demonstrations;;
2005;Margaret-Anne D. Storey,Robert Elves,Janice A. Singer;NavTracks: Supporting Navigation in Software.;173-175;3;Tool Demonstrations;;
2005;Richard C. Holt,Ian J. Davis,Nikita Synytskyy;Browsing Software Architectures With LSEdit.;176-178;3;Tool Demonstrations;;
2005;Margaret-Anne D. Storey;Theories, Methods and Tools in Program Comprehension: Past, Present and Future.;181-191;11;Keynote;;
2005;Katsuhisa Maruyama,Shinichirou Yamamoto;Design and Implementation of an Extensible and Modifiable Refactoring Tool.;195-204;10;Code Understanding and Refactoring;;selected
2005;Carsten Gorg,Peter Weissgerber;Detecting and Visualizing Refactorings from Software Archives.;205-214;10;Code Understanding and Refactoring;;selected
2005;Neil Walkinshaw,Marc Roper,Murray Wood;Understanding Object-Oriented Source Code from the Behavioural Perspective.;215-224;10;Code Understanding and Refactoring;;selected
2005;Scott A. Hendrickson,Richard N. Taylor,Eric M. Dashofy;An (Architecture-Centric) Approach for Tracing, Organizing, and Understanding Events in Event-Based Software Architectures.;227-236;10;Dynamic Analysis;;selected
2005;Michael Fischer,Thomas Gschwind,Johann Oberleitner,Harald Gall;System Evolution Tracking through Execution Trace Analysis.;237-246;10;Dynamic Analysis;;selected
2005;Steven P. Reiss;Efficient Monitoring and Display of Thread State in Java.;247-256;10;Dynamic Analysis;;selected
2005;Andreas Noack,Dirk Beyer;Clustering Software Artifacts Based on Frequent Common Changes.;259-268;10;Clustering and Components;;selected
2005;Vassilios Tzerpos,Zhihua Wen;Software Clustering based on Omnipresent Object Detection.;269-278;10;Clustering and Components;;selected
2005;Brendan Cleary,Kieran O'Dea,J. J. Collins,Jim Buckley,Andrew Le Gear;Achieving a Reuse Perspective within a Component Recovery Process: An Industrial Scale Case Study.;279-288;10;Clustering and Components;;selected
2005;Andreas Winter,Dean Jin;Working Session on Interoperable Reengineering Services.;291-293;3;Working Session;;
2005;Anthony Cox,Maryanne Fisher,David Dearman;Adding Control-Flow to a Visual Data-Flow Representation.;297-306;10;Software Visualization;;selected
2005;Andrian Marcus,Denise Comorski,Andrey Sergeyev;Supporting the Evolution of a Software Visualization Tool Through Usability Studies.;307-316;10;Software Visualization;;selected
2005;Dabo Sun,Kenny Wong;On Evaluating the Layout of UML Class Diagrams for Program Comprehension.;317-326;10;Software Visualization;;selected
2005;Anthony Cahill,Michael English,Kristian Lynch,Jim Buckley;An Empirical Study of the Use of Friends in C++ Software.;329-332;4;Short Papers;;
2005;Genoveffa Tortora,Rita Francese,Andrea De Lucia,Giuseppe Scanniello;Understanding Cloned Patterns in Web Applications.;333-336;4;Short Papers;;
2005;Stephen G. Kobourov,Anand Iyer,David Forrester,Saumya K. Debray,Bradley Dux;Visualizing the Behavior of Dynamically Modifiable Code.;337-340;4;Short Papers;;
2005;Susan Elliott Sim;A Small Social History of Software Architecture.;341-344;4;Short Papers;;
2004;Don S. Batory;Program Comprehension in Generative Programming: A History of Grand Challenges.;2-13;12;Keynote;;
2004;Claes Wohlin,Miroslaw Staron,Ludwik Kuzniarz;An Empirical Study on Using Stereotypes to Improve Understanding of UML Models.;14-23;10;Understanding of UML Models;;selected
2004;Tarja Systa,Kai Koskimies,Imed Hammouda,Olcay Guldogan;Tool-Supported Customization of UML Class Diagrams for Learning Complex System Models.;24-33;10;Understanding of UML Models;;selected
2004;Zhenchang Xing,Eleni Stroulia;Understanding Class Evolution in Object-Oriented Software.;34-45;12;Understanding of UML Models;;selected
2004;Pierre Kelsen;A Simple Static Model for Understanding the Dynamic Behavior of Programs.;46-51;6;Theories and Models for Software Comprehension;;selected
2004;Thomas Panas,Jonas Lundberg,Welf Lowe;Reuse in Reverse Engineering.;52-61;10;Theories and Models for Software Comprehension;;selected
2004;Gerardo Canfora,Aniello Cimitile,Corrado Aaron Visaggio;Working in Pairs as a Means for Design Knowledge Building: An Empirical Study.;62-69;8;Theories and Models for Software Comprehension;;selected
2004;Lianjiang Fu,Timothy Lethbridge,Abdelwahab Hamou-Lhadj;Challenges and Requirements for an Effective Trace Exploration Tool.;70-78;9;Analysis Techniques;;selected
2004;Christopher A. Mennie,Charles L. A. Clarke;Giving Meaning to Macros.;79-88;10;Analysis Techniques;;selected
2004;Andrea De Lucia,Mark Harman,Sebastian Danicic;Building Executable Union Slices using Conditioned Slicing.;89-99;11;Analysis Techniques;;selected
2004;Liam O'Brien,Chris Verhoef,Christoph Stoermer;Architectural Views through Collapsing Strategies.;100-110;11;Reverse Engineering and Visualization of Software Artifacts;;selected
2004;Silvia Takahashi,Camilo Sarmiento;Understanding CASE Generated Legacy Applications: A Case Study.;111-119;9;Reverse Engineering and Visualization of Software Artifacts;;selected
2004;Giuliano Antoniol,Massimiliano Di Penta,Michele Zazzara;Understanding Web Applications through Dynamic Analysis.;120-131;12;Reverse Engineering and Visualization of Software Artifacts;;selected
2004;Genoveffa Tortora,Rita Francese,Andrea De Lucia,Giuseppe Scanniello;Reengineering Web Applications Based on Cloned Pattern Analysis.;132-141;10;Understanding Web-Based Systems;;selected
2004;Scott R. Tilley,Damiano Distante,Tauhida Parveen;Towards a Technique for Reverse Engineering Web Transactions from a User's Perspective.;142-150;9;Understanding Web-Based Systems;;selected
2004;Keith H. Bennett,Nicolas Gold;Program Comprehension for Web Services.;151-161;11;Understanding Web-Based Systems;;selected
2004;Harry M. Sneed;Program Comprehension for the Purpose of Testing.;162-171;10;Program Comprehension in-the-large;;selected
2004;Andrea Capiluppi,Juan Fernandez-Ramil,Maurizio Morisio;Structural Evolution of an Open Source System: A Case Study.;172-182;11;Program Comprehension in-the-large;;selected
2004;Richard C. Holt,Ahmed E. Hassan;Using Development History Sticky Notes to Understand Software Architecture.;183-193;11;Program Comprehension in-the-large;;selected
2004;Vassilios Tzerpos,Zhihua Wen;An Effectiveness Measure for Software Clustering Algorithms.;194-203;10;Clustering for Program Comprehension;;selected
2004;Christian Girardi,Emanuele Pianta,Filippo Ricca,Paolo Tonella;An Empirical Study on Keyword-based Web Site Clustering.;204-213;10;Clustering for Program Comprehension;;selected
2004;Christos Tjortjis,Yiannis Kanellopoulos;Data Mining Source Code to Facilitate Program Comprehension: Experiments on Clustering Data Retrieved from C++ Programs.;214-225;12;Clustering for Program Comprehension;;selected
2004;Marco Torchiano;Empirical Assessment of UML Static Object Diagrams.;226-230;5;Short Papers;;
2004;Andrew Foss,Kenny Wong;On Migrating a Legacy Application to the Palm Platform.;231-235;5;Short Papers;;
2004;Nicolas Gold,Andrew Mohan;Programming Style Changes in Evolving Source Code.;236-240;5;Short Papers;;
2004;Richard C. Holt,Jingwei Wu;Resolving Linkage Anomalies in Extracted Software System Models.;241-245;5;Short Papers;;
2004;Bogdan Korel,Luay Ho Tahat;Understanding Modifications in State-Based Models.;246-250;5;Short Papers;;
2004;Thomas A. Henzinger,Rupak Majumdar,Dirk Beyer,Ranjit Jhala;An Eclipse Plug-in for Model Checking.;251-255;5;Short Papers;;
2004;Ladan Tahvildari,Kostas Kontogiannis;Requirements Driven Software Evolution.;258-259;2;Working Sessions;;
2004;Liam O'Brien,Dennis B. Smith;Working Session: Program Comprehension Strategies for Web Service and Service-oriented Architectures.;260-263;4;Working Sessions;;
2004;Manu De Backer,Jacques Vandenbulcke,Guido Dedene;Web Services Composition, Execution and Visualization.;264-265;2;Tool Demonstrations;;
2004;Claude Tadonki;Universal Report: A Generic Reverse Engineering Tool.;266-267;2;Tool Demonstrations;;
2004;Brendan Cleary,Christopher Exton;CHIVE - A Program Source Visualisation Framework.;268-270;3;Tool Demonstrations;;
2003;Paul Klint;How Understanding and Restructuring Differ from Compiling - A Rewriting Perspective.;2-;0;Keynote;;
2003;Ettore Merlo,Giuliano Antoniol,Massimiliano Di Penta;YAAB (Yet Another AST Browser): Using OCL to Navigate ASTs.;13-;0;Analysis Techniques;;selected
2003;Thomas Roy Dean,Yuling Chen;Design Recovery of a Two Level System.;23-32;10;Analysis Techniques;;selected
2003;Raghavan Komondoor,Susan Horwitz;Effective, Automatic Procedure Extraction.;33-;0;Analysis Techniques;;selected
2003;James M. Bieman,Anneliese von Mayrhauser,Helen J. Yang;Understanding Change-Proneness in OO Software through Visualization.;44-53;10;Program Understanding Tools and Technique;;selected
2003;Johann Oberleitner,Martin Pinzger,Harald Gall;Analyzing and Understanding Architectural Characteristics of COM+ Components.;54-63;10;Program Understanding Tools and Technique;;selected
2003;Seth Berrier,Panagiotis K. Linos,Brian O'Rourke,Zhi-hong Chen;A Tool For Understanding Multi-Language Program Dependencies.;64-;0;Program Understanding Tools and Technique;;selected
2003;Steven P. Reiss;Event-Based Performance Analysis.;74-83;10;Dynamic Analysis Techniques;;selected
2003;Edward B. Duffy,Brian A. Malloy,J. Paul Gibson;Applying the Decorator Pattern for Profiling Object-Oriented Software.;84-93;10;Dynamic Analysis Techniques;;selected
2003;Thomas Holl,Welf Lowe,Dirk Heuzeroth,Gustav Hogstrom;Automatic Design Pattern Detection.;94-;0;Dynamic Analysis Techniques;;selected
2003;Louis Feng,Andrian Marcus,Jonathan I. Maletic;Comprehension of Software Analysis Data Using 3D Visualization.;105-114;10;Program Comprehension Approache;;selected
2003;Tuomas Klemola,Juergen Rilling;Identifying Comprehension Bottlenecks Using Program Slicing and Cognitive Complexity Metric.;115-124;10;Program Comprehension Approache;;selected
2003;Loukas Sinos,Paul J. Layzell,Christos Tjortjis;Facilitating Program Comprehension by Mining Association Rules from Source Code.;125-;0;Program Comprehension Approache;;selected
2003;Huzefa H. Kagdi,Michael L. Collard,Jonathan I. Maletic;An XML-Based Lightweight C++ Fact Extractor.;134-143;10;Fact Extraction Techniques;;selected
2003;James R. Cordy;Generalized Selective XML Markup of Source Code Using Agile Parsing.;144-153;10;Fact Extraction Techniques;;
2003;Anthony Cox,Charles L. A. Clarke;Syntactic Approximation Using Iterative Lexical Analysis.;154-;0;Fact Extraction Techniques;;selected
2003;Christopher Exton,Jim Buckley;Blooms? Taxonomy: A Framework for Assessing Programmers? Knowledge of Software Systems.;165-174;10;Comprehension Frameworks and Evaluation;;selected
2003;Bob Uttl,Andy Ko;Individual Differences in Program Comprehension Strategies in Unfamiliar Programming Systems.;175-184;10;Comprehension Frameworks and Evaluation;;selected
2003;Andrew Walenstein;Observing and Measuring Cognitive Support: Steps Toward Systematic Tool Evaluation and Engineering.;185-;0;Comprehension Frameworks and Evaluation;;selected
2003;James R. Cordy;Comprehending Reality - Practical Barriers to Industrial Adoption of Software Maintenance Automation.;196-206;11;Keynote;;selected
2003;Filippo Ricca,Paolo Tonella;Using Clustering to Support the Migration from Static to Dynamic Web Pages.;207-216;10;Clustering Applications and Evaluation;;selected
2003;Yves Chiricota,Guy Melancon,Fabien Jourdan;Software Components Capture Using Graph Clustering.;217-226;10;Clustering Applications and Evaluation;;selected
2003;Vassilios Tzerpos,Zhihua Wen;An Optimal Algorithm for MoJo Distance.;227-;0;Clustering Applications and Evaluation;;selected
2003;Reid Holmes,Annie T. T. Ying,Gail C. Murphy,Andrew Chan;Scaling an Object-Oriented System Execution Visualizer through Sampling.;237-244;8;Short Papers I;;
2003;Thomas Gschwind,Johann Oberleitner,Martin Pinzger;Using Run-Time Data for Program Comprehension.;245-250;6;Short Papers I;;
2003;Keith Gallagher,Lucas Layman;Are Decomposition Slices Clones?.;251-;0;Short Papers I;;
2003;Shilpa Murthy,Gerald C. Gannod;Verification of Recovered Software Architectures.;258-265;8;Short Papers II;;
2003;Igor Ivkovic,Michael W. Godfrey;Enhancing Domain-Specific Software Architecture Recovery.;266-273;8;Short Papers II;;
2003;Jorg Niere,Jorg P. Wadsack,Lothar Wendehals;Handling Large Search Space in Pattern-Based Reverse Engineering.;274-;0;Short Papers II;;
2003;Scott R. Tilley,Shihong Huang;Workshop on Graphical Documentation for Programmers: Assessing the Efficacy of UML Diagrams for Program Understanding.;281-282;2;Working Sessions;;
2003;Juergen Rilling,Rainer Koschke,Arie van Deursen,Jean-Marie Favre;Experiences in Teaching Software Evolution and Program Comprehension.;283-284;2;Working Sessions;;
2003;Andrew Walenstein,Arun Lakhotia,Yun Yang,Junwei Li;Towards a Clone Detection Benchmark Suite and Results Archive.;285-;0;Working Sessions;;
2003;S. Dhinakar Jacob,Madhuchhanda Das;TALK2C: A Tool for Automatic Migratio.;288-289;2;Tool Demonstrations;;
2003;Dietmar Seipel,Marbod Hopfner,Jurgen Wolff von Gudenberg;Comprehending and Visualizing Software Based on XML - Representations and Call Graphs.;290-291;2;Tool Demonstrations;;
2003;Nishant Bawa,Sudipto Ghosh;Visualizing Interactions in Distributed Java Applications.;292-293;2;Tool Demonstrations;;
2003;Dirk Beyer,Claus Lewerentz;CrocoPat: Efficient Pattern Analysis in Object-Oriented Programs.;294-295;2;Tool Demonstrations;;
2003;Andreas Zeller;Isolating Cause-Effect Chains with AskIgo.;296-297;2;Tool Demonstrations;;
2003;Mark Hennessy,James F. Power,Brian A. Malloy;gccXfront: Exploiting gcc as a Front End for Program Comprehension Tools via XML/XSLT.;298-;0;Tool Demonstrations;;
2002;Alessandro Maccari,Alexandru Telea,Claudio Riva;An Open Visualization Toolkit for Reverse Architecting.;3-10;8;Visualization and User Interaction;;selected
2002;Aaron J. Quigley;Experience with FADE for the Visualization and Abstraction of Software Views.;11-20;10;Visualization and User Interaction;;selected
2002;Mohammad El-Ramly,Paul G. Sorenson,Eleni Stroulia;Mining System-User Interaction Traces for Use Case Models.;21-32;12;Visualization and User Interaction;;selected
2002;Steve Counsell,Stephen Swift,Emilia Mendes;Comprehension of Object-Oriented Software Cohesion: The Empirical Quagmire.;33-42;10;Theories and Models for Software Comprehension I;;selected
2002;Kurt Normark,Thomas Vestdam;Aspects of Internal Program Documentation - An Elucidative Perspective.;43-52;10;Theories and Models for Software Comprehension I;;selected
2002;Harald Gall,Martin Pinzger;Pattern-Supported Architecture Recovery.;53-64;12;Theories and Models for Software Comprehension I;;selected
2002;Thomas Roy Dean,Dean Jin,James R. Cordy;Where's the Schema? A Taxonomy of Patterns for Software Exchange.;65-74;10;Theories and Models for Software Comprehension II;;selected
2002;Andrew Walenstein;Theory-based Analysis of Cognitive Support in Software Comprehension Tools.;75-84;10;Theories and Models for Software Comprehension II;;selected
2002;Stephane Soteg Some,Timothy Lethbridge;Enhancing Program Comprehension with Recovered State Models.;85-96;12;Theories and Models for Software Comprehension II;;selected
2002;David M. Binkley;An Empirical Study of the Effect of Semantic Differences on Programmer Comprehension.;97-106;10;Experimental and Empirical Studies;;selected
2002;Liz Burd,Ady Wheetman,Dawn Overy;Evaluating Using Animation to Improve Understanding of Sequence Diagrams.;107-113;7;Experimental and Empirical Studies;;selected
2002;Richard C. Holt,Steve M. Easterbrook,Susan Elliott Sim;On Using a Benchmark to Evaluate C++ Extractors.;114-126;13;Experimental and Empirical Studies;;selected
2002;Michael W. Godfrey,Qiang Tu;An Integrated Approach for Studying Architectural Evolution.;127-136;10;Tools and Integration;;selected
2002;Joost Visser,Arie van Deursen;Building Program Understanding Tools Using Visitor Combinators.;137-146;10;Tools and Integration;;selected
2002;Malcolm Munro,Claire Knight;"Program Comprehension Experiences with GXL; Comprehension for Comprehension.";147-158;12;Tools and Integration;;selected
2002;Timothy Lethbridge,Abdelwahab Hamou-Lhadj;Compression Techniques to Simplify the Analysis of Large Execution Traces.;159-168;10;Analysis of Dynamic Aspects;;selected
2002;Fumiaki Ohata,Tomonori Takada,Katsuro Inoue;Dependence-Cache Slicing: A Program Slicing Method Using Lightweight Dynamic Information.;169-177;9;Analysis of Dynamic Aspects;;selected
2002;Igor Ivkovic,Michael W. Godfrey;Architecture Recovery of Dynamically Linked Applications: A Case Study.;178-186;9;Analysis of Dynamic Aspects;;selected
2002;Andrew Walenstein,Jens H. Weber-Jahnke,Nikolai Mansurov,Kenny Wong,Hausi A. Muller;Fused Data-Centric Visualizations for Software Evolution Environments.;187-196;10;Evolution and Reuse;;selected
2002;Gerardo Canfora,Lerina Aversano,Andrea De Lucia,Silvio Stefanucci;Evolving Ispell: A Case Study of Program Understanding for Reuse.;197-206;10;Evolution and Reuse;;selected
2002;Sara Gradara,Massimiliano Di Penta,Giuliano Antoniol;Traceability Recovery in RAD Software Systems.;207-218;12;Evolution and Reuse;;selected
2002;Leon Moonen;Lightweight Impact Analysis using Island Grammars.;219-228;10;Analysis I;;selected
2002;Anthony Cox,Charles L. A. Clarke;Relocating XML Elements from Preprocessed to Unprocessed Code.;229-238;10;Analysis I;;selected
2002;Richard C. Holt,Ahmed E. Hassan,Jingwei Wu;Using Graph Patterns to Extract Scenarios.;239-250;12;Analysis I;;selected
2002;Jianjun Zhao;Slicing Aspect-Oriented Software.;251-260;10;Analysis II;;selected
2002;Porfirio Tramontana,Ugo de Carlini,Giuseppe A. Di Lucca,F. Pace,Anna Rita Fasolino;Comprehending Web Applications by a Clustering Based Approach.;261-270;10;Analysis II;;selected
2002;Norman Wilde,Vaclav Rajlich;The Role of Concepts in Program Comprehension.;271-280;10;Analysis II;;selected
2002;Christopher Exton;Constructivism and Program Comprehension Strategies.;281-284;4;Short Papers;;
2002;Scott R. Tilley,Shihong Huang;On Selecting Software Visualization Tools for Program Understanding in an Industrial Context.;285-288;4;Short Papers;;
2002;Andrian Marcus,Michael L. Collard,Jonathan I. Maletic;Source Code Files as Structured Documents.;289-292;4;Short Papers;;
2001;Keith H. Bennett;Systems Evolution, Components and Services: Understanding the New Software Environment.;3-6;4;;;
2001;Sarita Bassil,Rudolf K. Keller;Software Visualization Tools: Survey and Analysis.;7-17;11;Visualization;;selected
2001;Malcolm Munro,Claire Knight;Mediating Diverse Visualisations for Comprehension.;18-25;8;Visualization;;selected
2001;Andrian Marcus,Greg Dunlap,Jonathan I. Maletic,Jason Leigh;Visualizing Object-Oriented Software in Virtual Reality.;26-38;13;Visualization;;selected
2001;Alessandro Orso,Mary Jean Harrold,Saurabh Sinha;Effects of Pointers on Data Dependences.;39-49;11;Analysis I;;selected
2001;Yunbo Deng,Yogy Namara,Suraj C. Kothari;Program Slice Browser.;50-59;10;Analysis I;;selected
2001;David A. Carr,Johan Moe;Understanding Distributed Systems via Execution Trace Data.;60-70;11;Analysis I;;selected
2001;Jim Buckley,Michael P. O'Brien;Inference-Based and Expectation-Based Processing in Program Comprehension.;71-78;8;Program Understanding;;selected
2001;Susan Wiedenbeck,Russell Mosemann;Navigation and Comprehension of Programs by Novice Programmers.;79-88;10;Program Understanding;;selected
2001;Robert M. Hierons,Chris Fox,Mark Harman,Sebastian Danicic;Backward Conditioning: A New Program Specialisation Technique and Its Application to Program Comprehension.;89-97;9;Program Understanding;;selected
2001;Hongji Yang,Yang Li;Simplicity: A Key Engineering Concept for Program Understanding.;98-110;13;Program Understanding;;selected
2001;Margaret-Anne D. Storey,Jeff Michaud,Casey Best;SHriMP Views: An Interactive Environment for Exploring Java Programs.;111-112;2;Tool Demo;;
2001;Mark E. M. Stewart;Automated Analysis of Scientific and Engineering Semantics.;113-114;2;Tool Demo;;
2001;Kamran Sartipi;Alborz: A Query-based Tool for Software Architecture Recovery.;115-118;4;Tool Demo;;
2001;Timothy Lethbridge;Report from the Dagstuhl Seminar on Interoperability of Reengineering Tools.;119;1;Working Session Track I;;
2001;Eleni Stroulia,Tarja Systa;Structure-Behavior-Function Program Understanding.;120-122;3;Working Session Track I;;
2001;Dewayne E. Perry;Software Architecture: Leverage for System/Program Comprehension.;123-126;4;Keynote Address;;
2001;Andrew J. Malton,Jason Reynolds,Thomas Roy Dean,Darren Cousineau,James R. Cordy,Kevin A. Schneider;Processing Software Source Text in Automated Design Recovery and Transformation.;127-134;8;Design Recovery;;selected
2001;Keith H. Bennett,Nicolas Gold;A Flexible Method for Segmentation in Concept Assignmen.;135-144;10;Design Recovery;;selected
2001;Kevin A. Schneider,Andrew J. Malton,Thomas Roy Dean,James R. Cordy;HSML: Design Directed Source Code Hot Spots.;145-156;12;Design Recovery;;selected
2001;Renee J. Miller,Periklis Andritsos;Reverse Engineering Meets Data Analysis.;157-166;10;Techniques and Methods;;selected
2001;Harry M. Sneed;Extracting Business Logic from Existing COBOL Programs as a Basis for Redevelopment.;167-175;9;Techniques and Methods;;selected
2001;Ugo de Carlini,Giuseppe A. Di Lucca,Anna Rita Fasolino;An Algebraic Notation for Representing Threads in Object Oriented Software Comprehension.;176-188;13;Techniques and Methods;;selected
2001;Scott R. Tilley,Mohan DeSouza;Spreading Knowledge about Gnutella: A Case Study in Understanding Net-Centric Applications.;189-198;10;Case Studies;;selected
2001;Gerardo Canfora,Lerina Aversano,Silvio Stefanucci;Understanding and Improving the Maintenance Process: A Method and Two Case Studies.;199-208;10;Case Studies;;selected
2001;Carola Lange,Harry M. Sneed,Andreas Winter;Comparing Graph-Based Program Comprehension Tools to Relational Database-Based Tools.;209-220;12;Case Studies;;selected
2001;Betty H. C. Cheng,Gerald C. Gannod;A Suite of Tools for Facilitating Reverse Engineering Using Formal Methods.;221-232;12;Analysis Tools;;selected
2001;Jean-Marie Favre;GSEE: A Generic Software Exploration Environment.;233-244;12;Analysis Tools;;selected
2001;Iyad Zayour,Timothy Lethbridge;Adoption of Reverse Engineering Tools: A Cognitive Perspective and Methodology.;245-258;14;Analysis Tools;;selected
2001;Kamran Sartipi;A Software Evaluation Model Using Component Association Views.;259-268;10;Redocumentation;;selected
2001;Reinder J. Bril,Andre Postma;An Architectural Connectivity Metric and Its Support for Incremental Re-Architecting of Large Legacy Systems.;269-280;12;Redocumentation;;selected
2001;Ettore Merlo,Giuliano Antoniol,Massimiliano Di Penta,Gerardo Casazza;A Method to Re-Organize Legacy Systems via Concept Analysis.;281-292;12;Redocumentation;;selected
2001;Zhifeng Yu,Vaclav Rajlich;Hidden Dependencies in Program Comprehension and Change Propagation.;293-299;7;Analysis II;;selected
2001;Thomas Eisenbarth,Daniel Simon,Rainer Koschke;Feature-Driven Program Understanding Using Concept Analysis of Execution Traces.;300-309;10;Analysis II;;selected
2001;Lin Hu,Malcolm Munro,Mark Harman,Xingyuan Zhang;Side-Effect Removal Transformation.;310-322;13;Analysis II;;selected
2001;Kenny Wong;Research Challenges in the Reverse Engineering Community.;323-324;2;Working Session Track II;;
2000;Roland T. Mittermeir;Comprehending by varying Focal Distance.;3-4;2;Keynotes;;
2000;Hausi A. Muller;Program Comprehension and Software Migration Strategies.;5-;0;Keynotes;;
2000;Claes Wohlin,Martin Host,Magnus C. Ohlsson;Understanding the Sources of Software Defects: A Filtering Approach.;9-17;9;Software Quality Analysis;;selected
2000;Jens H. Weber-Jahnke,Jorg P. Wadsack,Jorg Niere;Automated Quality Analysis of Component Software for Embedded Systems.;18-26;9;Software Quality Analysis;;selected
2000;Claes Wohlin,Lars Bratthall;Understanding Some Software Quality Aspects from Architecture and Design Models.;27-;0;Software Quality Analysis;;selected
2000;Kamran Sartipi,Kostas Kontogiannis,Farhad Mavaddat;A Pattern Matching Framework for Software Architecture Recovery and Restructuring.;37-47;11;Architecture Recovery;;selected
2000;John B. Tran,Michael W. Godfrey,Eric H. S. Lee,Richard C. Holt;Architectural Repair of Open Source Software.;48-59;12;Architecture Recovery;;selected
2000;Peter Newson,Steve Counsell,Emilia Mendes;Architectural Level Hypothesis Testing through Reverse Engineering of Object-Oriented Software.;60-;0;Architecture Recovery;;selected
2000;Jean-Christophe Deprez,Arun Lakhotia;A Formalism to Automate Mapping from Program Features to Code.;69-78;10;Reverse Engineering;;selected
2000;Ettore Merlo,Giuliano Antoniol,Gerardo Canfora,Gerardo Casazza,Andrea De Lucia;Tracing Object-Oriented Code into Functional Requirements.;79-86;8;Reverse Engineering;;selected
2000;Jean-Francois Girard,Martin Wurthner;Evaluating the Accessor Classification Approach to Detect Abstract Data Types.;87-;0;Reverse Engineering;;selected
2000;Jorma Sajaniemi;Program Comprehension through Multiple Simultaneous Views: A Session with VinEd.;99-108;10;Tools and Environments;;selected
2000;Neil M. Goldman;Smiley-An Interactive Tool for Monitoring Inter-Module Function Calls.;109-118;10;Tools and Environments;;selected
2000;Kurt Normark;Requirements for an Elucidative Programming Environment.;119-;0;Tools and Environments;;selected
2000;Stan Rifkin,Lionel E. Deimel;Program Comprehension Techniques Improve Software Inspections: A Case Study.;131-138;8;Program Comprehension Studies;;selected
2000;Cynthia L. Corritore,Susan Wiedenbeck;Direction and Scope of Comprehension-Related Activities by Procedural and Object-Oriented Programmers: An Empirical Study.;139-148;10;Program Comprehension Studies;;selected
2000;Giuseppe Visaggio,Alessandro Bianchi,Anna Rita Fasolino;An Exploratory Case Study of the Maintenance Effectiveness of Traceability Models.;149-;0;Program Comprehension Studies;;selected
2000;Christopher Smith,L. Ross Raszewski,Mark Harman,David M. Binkley;An Empirical Study of Amorphous Slicing as a Program Comprehension Support Tool.;161-170;10;Metrics and Slicing;;selected
2000;James F. Power,Brian A. Malloy;Metric-Based Analysis of Context-Free Grammars.;171-178;8;Metrics and Slicing;;selected
2000;Harry M. Sneed;Source Animation as a Means of Program Comprehension.;179-;0;Metrics and Slicing;;selected
2000;Kostas Kontogiannis,Steve Reuss,Derek Rayside,Erik Hedges;The Effect of Call Graph Construction Algorithms for Object-Oriented Programs on Automatic Clustering.;191-200;10;Clustering Techniques;;selected
2000;Thomas Eisenbarth,Rainer Koschke;A Framework for Experimental Evaluation of Clustering Techniques.;201-210;10;Clustering Techniques;;selected
2000;Richard C. Holt,Vassilios Tzerpos;On the Stability of Software Clustering Algorithms.;211-;0;Clustering Techniques;;selected
2000;Tobias Kuipers,Leon Moonen;Types and Concept Analysis for Legacy Systems.;221-230;10;Concept Analysis;;selected
2000;Nicolas Anquetil;A Comparison of Graphs of Concept for Reverse Engineering.;231-240;10;Concept Analysis;;selected
2000;Vaclav Rajlich,Kunrong Chen;Case Study of Feature Location Using Dependence Graph.;241-;0;Concept Analysis;;selected
2000;Ettore Merlo,Giuliano Antoniol,Gerardo Casazza;Identification of Lower-Level Artifacts.;253;1;Working Sessions;;
2000;Marian Petre;Empirical Studies of Programming-in-the-Large: How?;254;1;Working Sessions;;
2000;Keith Gallagher;Tools for Program Comprehension: Building a Comprehender's Workbench.;255;1;Working Sessions;;
2000;Harald Wertz,Francoise Balmas,Janice A. Singer;Understanding Program Understanding.;256;1;Working Sessions;;
1999;Malcolm Munro,Claire Knight;Comprehension with[in] Virtual Environment Visualisations.;4-11;8;Paper Session I: Visualization;;selected
1999;Panagiotis K. Linos,Vijay Karunakaran,Esther T. Ososanya;Improving the Visibility of Graphical Program Displays: An Experimental Study.;12-19;8;Paper Session I: Visualization;;selected
1999;James Westland Cain,Rachel Jane McCrindle;Program Visualisation using C++ Lenses.;20-;0;Paper Session I: Visualization;;selected
1999;Richard C. Holt,Ivan T. Bowman;Reconstructing Ownership Architectures To Help Understand Software Systems.;28-37;10;Paper Session II: Architectures for Understanding;;selected
1999;Chris Verhoef,M. P. A. Sellink;An Architecture for Automated Software Maintenance.;38-48;11;Paper Session II: Architectures for Understanding;;selected
1999;Ettore Merlo,Bruno Lague,Michel R. Dagenais,Jean-Francois Patenaude;Extending Software Quality Assessment Techniques to Java Systems.;49-;0;Paper Session II: Architectures for Understanding;;selected
1999;Giuseppe Visaggio,Anna Rita Fasolino;Improving Software Comprehension through an Automated Dependency Tracer.;58-65;8;Paper Session III: Integration Frameworks;;selected
1999;Floyd Saner,Ilene Burnstein;An Application of Fuzzy Reasoning to Support Automated Program Comprehension.;66-73;8;Paper Session III: Integration Frameworks;;selected
1999;Leon Moonen,Arie van Deursen;Understanding COBOL Systems using Inferred Types.;74-;0;Paper Session III: Integration Frameworks;;selected
1999;Nicola Mazzocca,Beniamino Di Martino,Umberto Villano,Antonino Mazzeo;Restructuring Parallel Programs by Transformation of Point-To-Point Interactions into Collective Communication.;84-91;8;Paper Session IV: Comprehension Strategies;;selected
1999;Harry M. Sneed,Tomas Dombovari;Comprehending a Complex, Distributed, Object-Oriented Software System a Report from the Field.;218-;0;Paper Session IV: Comprehension Strategies;;selected
1999;Bogdan Korel;Black-Box Understanding of COTS Components.;92-;0;Paper Session IV: Comprehension Strategies;;selected
1999;Spencer Rugaber,Margaret Ann Francel;The Relationship of Slicing and Debugging to Program Understanding.;106-113;8;Paper Session V: Parsing;;selected
1999;Gregory Knapen,Bruno Lague,Ettore Merlo,Michel R. Dagenais;Parsing C++ Despite Missing Declarations.;114-125;12;Paper Session V: Parsing;;selected
1999;Jianjun Zhao;Slicing Concurrent Java Programs.;126-;0;Paper Session V: Parsing;;selected
1999;Giuseppe A. Di Lucca,Gerardo Canfora,Aniello Cimitile,Andrea De Lucia;A Case Study of Applying an Eclectic Approach to Identify Objects in Code.;136-143;8;Paper Session VI: Decomposition and Composition;;selected
1999;Liwu Li;On Managing Classes for Evolving Software.;144-150;7;Paper Session VI: Decomposition and Composition;;selected
1999;Giuliano Antoniol,Alessandra Potrich,Roberto Fiutem,Paolo Tonella;Evolving Object Oriented Design to Improve Code Traceability.;151-;0;Paper Session VI: Decomposition and Composition;;selected
1999;Jussi Koskinen;Empirical Evaluation of Hypertextual Information Access from Program Text.;162-169;8;Paper Session VII: Empirical Aspects;;selected
1999;Anneliese von Mayrhauser,Stephen Lang;On the Role of Static Analysis during Software Maintenance.;170-177;8;Paper Session VII: Empirical Aspects;;selected
1999;Paul Warren,Cornelia Boldyreff,Malcolm Munro;The Evolution of Websites.;178-;0;Paper Session VII: Empirical Aspects;;selected
1999;Mike Van Emmerik,Cristina Garcia Cifuentes;Recovery of Jump Table Case Statements from Binary Code.;192-199;8;Paper Session VIII: Program Analysis;;selected
1999;Craig Smith,Christoph W. Kessler;The SPARAMAT Approach to Automatic Comprehension of Sparse Matrix Computations.;200-207;8;Paper Session VIII: Program Analysis;;selected
1999;Robert M. Hierons,Chris Fox,Mark Harman,Sebastian Danicic,David M. Binkley;Program Simplification as a Means of Approximating Undecidable Propositions.;208-217;10;Paper Session VIII: Program Analysis;;selected
1998;Reinhard Schauer,Rudolf K. Keller;Pattern Visualization for Software Comprehension.;4-;0;Visualization;;selected
1998;Susan K. Burkwald,John D. Pyrce,Kurt D. Rivard,Stephen G. Eick;Visualizing Year 2000 Program Changes.;13-;0;Visualization;;selected
1998;Peter Young,Malcolm Munro;Visualizing Software in Virtual Reality.;19-;0;Visualization;;selected
1998;Jeffrey Kramer,Nabor C. Mendonca;Developing an Approach for the Recovery of Distributed Software Architectures.;28-;0;Architecture;;selected
1998;Ettore Merlo,Bruno Lague,Charles Leduc,Andre Le Bon,Michel R. Dagenais;An Analysis Framework for Understanding Layered Software Architectures.;37-44;8;Architecture;;selected
1998;Brian S. Mitchell,Emden R. Gansner,Chris Rorres,Spiros Mancoridis,Yih-Farn Robin Chen;Using Automatic Clustering to Produce High-Level System Organizations of Source Code.;45-;0;Architecture;;selected
1998;Liam O'Brien,Alex Quilici,Keith Gallagher,Steven G. Woods,Tao Lin;An Architecture for Interoperable Program Understanding Tools.;54-63;10;Integration Frameworks;;selected
1998;Manfred Kamp;Managing a Multi-File, Multi-Language Software Repository for Program Comprehension Tools 3/4 A Generic Approach.;64-;0;Integration Frameworks;;selected
1998;Arun Lakhotia;DIME: A Direct Manipulation Environment for Evolutionary Development of Software.;72-;0;Integration Frameworks;;selected
1998;Francoise Detienne,Jean-Marie Burkhardt,Susan Wiedenbeck;The Effect of Object-Oriented Programming Expertise in Several Dimensions of Comprehension Strategies.;82-;0;Comprehension Strategies;;selected
1998;Tobias Kuipers,Arie van Deursen;Rapid System Understanding: Two COBOL Case Studies.;90-97;8;Comprehension Strategies;;selected
1998;Harry M. Sneed,Katalin Erdos;Partial Comprehension of Complex Programs (enough to perform maintenance).;98-;0;Comprehension Strategies;;selected
1998;Chris Verhoef,Mark van den Brand,M. P. A. Sellink;Current Parsing Techniques in Software Renovation Considered Harmful.;108-;0;Parsing;;selected
1998;Stephane Soteg Some,Timothy Lethbridge;Parsing Minimization when Extracting Information from Code in the Presence of Conditional Compilation.;118-125;8;Parsing;;selected
1998;Shane Sendall,Cristina Garcia Cifuentes;Specifying the Semantics of Machine Instructions.;126-;0;Parsing;;selected
1998;Giuseppe A. Di Lucca,Gerardo Canfora,Aniello Cimitile,Andrea De Lucia;Decomposing Legacy Programs: A First Step Towards Migrating to Client-Server Platforms.;136-144;9;Decomposition;;selected
1998;Juergen Rilling,Bogdan Korel;Program Slicing in Understanding of Large Programs.;145-;0;Decomposition;;selected
1998;Giuliano Antoniol,L. Cristoforetti,Roberto Fiutem;Design Pattern Recovery in Object-Oriented Software.;153-;0;Decomposition;;selected
1998;Anneliese von Mayrhauser,A. Marie Vans;Program Understanding Behavior During Adaptation of Large Scale Software.;164-;0;Empirical Studies;;selected
1998;Timothy Lethbridge,Janice A. Singer;Studying Work Practices to Assist Tool Design in Software Engineering.;173-;0;Empirical Studies;;selected
1998;Richard C. Holt,Charles L. A. Clarke,Susan Elliott Sim;Archetypal Source Code Searches: A Survey of Software Developers and Maintainers.;180-;0;Empirical Studies;;selected
1998;Kuo-Chung Tai,Alessio Bechini;Design of a Toolset for Dynamic Analysis of Concurrent Java Program.;190-;0;Program Analysis;;selected
1998;April Wielgosz,Brennan Jubb,Bruce Duncan,David M. Binkley;The Feedback Compiler.;198-;0;Program Analysis;;selected
1998;Nicola Mazzocca,Beniamino Di Martino,Umberto Villano,Antonino Mazzeo;Automatic Detection of Interaction Patterns for Parallel Program Analysis and Development .;206-;0;Program Analysis;;selected
1997;Giuseppe Visaggio;Relationships between Documentation and Maintenance Activities.;4-16;13;Program Understanding-In-The-Large;;selected
1997;F. David Fracchia,Margaret-Anne D. Storey,Hausi A. Muller;Cognitive Design Elements to Support the Construction of a Mental Model during Software Visualization.;17-28;12;Program Understanding-In-The-Large;;selected
1997;Jean-Marie Favre;Understanding-In-The-Large.;29-;0;Program Understanding-In-The-Large;;selected
1997;Katherine Roberson,Ilene Burnstein;Automated Chunking to Support Program Comprehension.;40-49;10;Automated Program Understanding;;selected
1997;Jack R. Hagemeister,Cauligi S. Raghavendra,Dejan Markovic,Sanjay Bhansali;Semi-automatic Generation of Parallelizable Patterns from Source Code Examples.;50-59;10;Automated Program Understanding;;selected
1997;Melody Moore Jackson,Spencer Rugaber;Using Knowledge Representation to Understand Interactive Systems.;60-;0;Automated Program Understanding;;selected
1997;Mark Harman,Sebastian Danicic;Amorphous Program Slicing.;70-79;10;Program Analysis;;selected
1997;Juergen Rilling,Bogdan Korel;Dynamic Program Slicing in Understanding of Program Execution.;80-89;10;Program Analysis;;selected
1997;Ettore Merlo,Giuliano Antoniol,Roberto Fiutem,Paolo Tonella;Points-to Analysis for Program Understanding.;90-;0;Program Analysis;;selected
1997;Linda M. Wills,Lyman Taylor,Richard Clayton,Spencer Rugaber;A Case Study of Domain-based Program Understanding.;102-110;9;Program Comprehension;;selected
1997;Jelber Sayyad-Shirabad,Timothy Lethbridge,Steve Lyon;A Little Knowledge Can Go a Long Way Towards Program Understanding.;111-117;7;Program Comprehension;;selected
1997;Harald Gall,Georg Trausmuth,Rene Klosch,Johannes Weidl;Facilitating Program Comprehension via Generic Components for State Machines.;118-;0;Program Comprehension;;selected
1997;Malcolm Munro,Liz Burd;Enriching Program Comprehension for Software Reuse.;130-137;8;Finding Reusable Assets;;selected
1997;Giuseppe A. Di Lucca,Andrea De Lucia,Aniello Cimitile,Anna Rita Fasolino;Identifying objects in legacy systems.;138-147;10;Finding Reusable Assets;;selected
1997;Paul Luker,Hongji Yang,William Cheng-Chung Chu;Code Understanding through Program Transformation for Reusable Component Identification.;148-;0;Finding Reusable Assets;;selected
1997;George S. Cowan,Vaclav Rajlich;Towards Standard for Experiments in Program Comprehension.;160-161;2;Panel Infrastructure for Software Comprehension and Reengineering;;selected
1997;Linda M. Wills,Spencer Rugaber;Position Paper on Research Infrastructure for Reengineering.;162-164;3;Panel Infrastructure for Software Comprehension and Reengineering;;selected
1997;Anneliese von Mayrhauser,Steve Lang;Building a Research Infrastructure for Program Comprehension Observations.;165-169;5;Panel Infrastructure for Software Comprehension and Reengineering;;selected
1997;Scott R. Tilley,Dennis B. Smith;On Using the Web as Infrastructure for Reengineering.;170-;0;Panel Infrastructure for Software Comprehension and Reengineering;;selected
1997;John V. Harrison,Anthony Berglas;Evaluation of the ITOC information system design recovery tool.;176-182;7;Tools;;selected
1997;Mei C. Chuah,Stephen G. Eick;Glyphs for Software Visualization.;183-191;9;Tools;;selected
1997;Pui-Shan Chan,Malcolm Munro;PUI: A Tool to Support Program Understanding.;192-;0;Tools;;selected
